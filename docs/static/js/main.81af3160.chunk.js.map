{"version":3,"sources":["Components/Routes/Home/Home.module.less","Components/Routes/QuestList/QuestList.module.less","logo.png","Components/Header/Header.module.less","Components/Routes/Home/pay.png","Components/MissileTable/MissileTable.module.less","Components/DotTable/DotTable.module.less","Components/Routes/Unit/Unit.module.less","Components/Routes/Login/Login.module.less","Components/Routes/Quest/Quest.module.less","context/UserContext.ts","context/MediaContext.ts","Components/Header/Header.tsx","Components/Card/Card.tsx","utils.ts","consts.ts","Components/Loading/Loading.tsx","Components/Routes/Home/Home.tsx","Components/Rarity/Rarity.tsx","Components/Routes/UnitList/UnitListCard.tsx","fragments.ts","Components/Routes/Unit/types.ts","Components/Gender/Gender.tsx","Components/SkillTable/SkillTable.tsx","Components/AbilityTable/AbilityTable.tsx","Components/MissileTable/MissileTable.tsx","Components/ClassTable/ClassTable.tsx","Components/DotAnimation/DotAnimation.tsx","Components/DotTable/DotTable.tsx","Components/Routes/Unit/ConneNameInput.tsx","Components/Routes/Unit/NickNamesInput.tsx","Components/Routes/Unit/UnitSpecialtyTable.tsx","Components/Routes/Unit/Unit.tsx","Components/Routes/UnitList/UnitList.tsx","Components/Routes/QuestList/types.ts","Components/Routes/QuestList/MissionShutter.tsx","Components/TalkRow.tsx","Components/Routes/Quest/EnemyTable.tsx","Components/Routes/Quest/PreviewDot.tsx","Components/Routes/Quest/MapTable.tsx","Components/Routes/Quest/QuestTermTable.tsx","Components/Routes/Quest/Quest.tsx","Components/Routes/QuestList/QuestList.tsx","Components/Routes/ClassList/ClassList.tsx","Components/Routes/SkillList/SkillList.tsx","Components/Routes/AbilityList/AbilityList.tsx","Components/Routes/EmojiList/index.tsx","Components/Routes/Login/Login.tsx","Components/Routes/MissileList/MissileList.tsx","Components/Router.tsx","App.tsx","serviceWorker.ts","index.tsx","Components/Routes/UnitList/UnitList.module.less","Components/ClassTable/ClassTable.module.less","Components/Routes/EmojiList/index.module.less","Components/SkillTable/SkillTable.module.less","Components/AbilityTable/AbilityTable.module.less"],"names":["module","exports","createContainer","useState","localStorage","getItem","state","setState","login","token","setItem","isTabletOrMobile","useMediaQuery","query","Header","SubMenu","Item","HeaderBar","active","setActive","location","useLocation","useEffect","pathname","split","className","styles","header","to","alt","src","logo","mode","headerMenu","selectedKeys","key","title","ShadowedCard","this","props","React","Component","DefaultGetter","obj","index","toString","renderDescription","source","replace","range","min","max","length","res","gap","current","push","BASE_SERVER_URL","process","REACT_APP_SERVER","API_URL","STATIC_URL","PLAYER_DOT_URL","ENEMY_DOT_URL","BATTLE_TALK_EVENT_URL","EMOJI_URL","ICO_URL","BANNER_URL","PLAYER_STAND_CG_URL","PLAYER_HARLEM_CG_URL","MAP_IMAGE_URL","ENEMY_CHANGE_COND","0","1","2","3","4","5","BONUS_TYPE","6","7","8","9","11","fuck","Loading","arr","tip","Math","floor","random","size","style","marginTop","display","Content","Home","date","setDate","selectedDate","setSelectedDate","useQuery","gql","onCompleted","d","Posters","posterName","moment","slice","loading","data","posterRef","useRef","posterLoading","setPosterLoading","includes","format","BASE_GAME_URL","content","logoblock","topLogo","UpdateTime","fromNow","gutter","xs","md","Banners","map","bannerName","maxWidth","value","onChange","fullscreen","monthFullCellRender","first","find","p","startsWith","classNames","calendarMonthDisabled","onClick","localeData","monthsShort","disabledDate","spinning","ref","onLoad","width","beg","placement","trigger","payImage","type","role","aria-label","Rarity","rare","color","textShadow","UnitListCard","card","showUnit","setFilter","listCard","male","Number","parseInt","Kind","female","alignItems","CardID","height","Rare","Name","lg","RaceName","e","stopPropagation","AssignName","IdentityName","GenusName","Classes","IllustName","DotFragment","MissileFragment","EnemyFragment","Gender","gender","SKILL_TYPE","Init","CC","Evo","SkillConfigTableRows","config","Comment","setValue","useMutation","SkillConfigMeta","setSkillConfigMeta","editing","setEditing","focus","handleSave","a","async","variables","TypeID","Data_InfluenceType","message","success","configRowGroup","cover","colSpan","blank","target","onBlur","onPressEnter","fakeInput","small","Data_MulValue","Data_MulValue2","_HoldRatioUpperLimit","Data_MulValue3","Data_AddValue","Type_Collision","Type_CollisionState","Data_Target","_ExpressionActivate","_Expression","wordWrap","SkillTableRows","skill","showConfigs","setShowConfigs","MediaContext","useContainer","secondRow","LevelMax","ContTimeMax","WaitTime","PowerMax","icon","Fragment","SkillID","SkillName","textAlign","dangerouslySetInnerHTML","__html","Text","table","tableLayout","Cards","sort","c1","c2","marginLeft","position","Configs","SkillTable","skills","ABILITY_TYPE","AbilityConfigTableRows","AbilityConfigMeta","setAbilityConfigMeta","_InfluenceType","_Param1","_Param2","_Param3","_Param4","_InvokeType","_TargetType","_Command","_ActivateCommand","AbilityTable","ability","Type","AbilityID","AbilityName","MissileTable","missile","compact","isCompact","Property","MissileID","PatternID","Enemy","Speed","SlowTime","SlowRate","DamageArea","CLASS_TYPE","Evo2a","Evo2b","ClassTable","classData","setClassMeta","NickNames","ClassID","Explanation","AttackWait","ClassAbilityPower1","tokenSeparators","v","name","AttackAttribute","Missile","ClassAbilityConfigs","DotAnimation","dot","canvas","gif","canvasWidth","canvasHeight","top","bottom","left","right","tickNum","Length","timelines","dots","frameNum","Entries","entry","Sprites","timeline","patternPos","t","pattern","PatternNo","prevFrame","frame","Sprite","X","Y","Width","Height","OriginX","OriginY","ParsedX","ParsedY","Alpha","Pos","Scale","Time","undefined","Data","alphaPos","prevAlpha","nextAlpha","alphas","posPos","prevPos","nextPos","posesX","posesY","scalePos","prevScale","nextScale","scalesX","scalesY","forEach","generateTimelines","imageObj","Image","crossOrigin","ctx","getContext","currentTick","GIF","workers","quality","workerScript","transparent","on","blob","url","URL","createObjectURL","document","createElement","href","download","click","frameId","gifStatus","onload","imageLoop","window","requestAnimationFrame","clearRect","sprite","globalAlpha","drawImage","addFrame","copy","delay","cv","cancelAnimationFrame","render","DotTable","entryIndex","backgroundImage","backgroundPositionX","backgroundPositionY","ConneNameInput","ConneName","setCardMeta","setCardMetaLoading","NickNamesInput","UnitSpecialtyRows","UnitConfigMeta","setUnitConfigMeta","Type_Specialty","Value_Specialty","Value_Param1","Value_Param2","Value_Param3","Value_Param4","Command","UnitSpecialtyTable","configs","countMinMax","maxLevel","maxLevelUnit","mod","ceil","getStatus","BattleStyle","ranges","_Range_01","_Range_02","_Range_03","_Range_04","_Range_05","classes","_AwakePattern","findIndex","cl","splice","nearRange","rarity","Data_ExtraAwakeOrbs","JobChange","MaxLevel","HP","InitHP","MaxHP","MaxHPMod","Atk","InitAtk","MaxAtk","AtkMod","Def","InitDef","MaxDef","DefMod","Cost","CostModValue","CostDecValue","AtkArea","classDataToUnit","Unit","match","useRouter","params","currentImg","setCurrentImg","currentText","setCurrentText","avatars","setAvatars","id","fetchPolicy","refetch","Card","filter","ImageStand","container","_","isEmpty","previewContainer","outerRadioContainer","inset","radioContainer","Group","radioGroup","imgName","Button","danger","ImageCG","HarlemTextA","HarlemTextR","outerImageContainer","imageContainer","textContainer","fullScreen","ghost","shape","closeButton","text","p1","avatar","onError","HomeCooking","SellPrice","_TradePoint","MagicResistance","BonusType","get","BonusNum","BonusType2","BonusNum2","BonusType3","BonusNum3","st","rowSpan","BlockNum","Skills","skillWithType","uniqBy","Abilities","SpecialtyConfigs","Dots","sm","FILTER_TYPE","UnitList","order","sorter","setSorter","search","setSearch","filters","setFilters","setSize","scrolled","setScrolled","history","main","getElementsByTagName","handleResize","offsetWidth","offsetHeight","onresize","genSorter","cursor","getParam","keys","handleSetFilter","f","fs","cardID","modal","cards","cardA","cardB","paramA","paramB","flag","JSON","stringify","sourceValue","parsedValue","unitListContent","placeholder","event","filterContainer","closable","onClose","i","sorterBlock","shadow","listContainer","itemCount","itemSize","onScroll","scrollOffset","String","visible","destroyOnClose","getContainer","UnitListWrapper","MISSION_TYPE","Assault","Story","Emergency","Reproduce","DailyReproduce","Subjugation","DevilAdvent","Harlem","Daily","Challenge","Tutorial","Tower","Raid","MissionShutter","mission","showQuest","questID","MissionID","Mission","Quests","quest","QuestID","bind","float","Charisma","ActionPoint","TalkRow","talk","margin","FaceID","Message","EnemyConfigTableRows","EnemyConfigMeta","setEnemyConfigMeta","Type_Influence","Param_1","Param_2","Param_3","Param_4","_ExtParam","EnemyTableRows","enemies","drops","routes","expand","setExpand","Array","fill","showTable","setShowTable","routeNos","RouteNo","routeNo","route","RouteID","previewSprite","types","SkyFlag","EnemyElem","_EnemyElementName","EnemyType","_EnemyTypeName","_Attribute","join","changeCondition","Param_ChangeParam","Param_ChangeCondition","imgID","dropImg","PrizeCardID","fontSize","marginRight","zoom","verticalAlign","enemy","attackSpeed","ATTACK_RANGE","ATTACK_SPEED","getAttackSpeed","DotRate","background","TypeAttack","MagicAttack","ATTACK_POWER","ARMOR_DEFENSE","MAGIC_DEFENSE","Param_ResistanceAssassin","paddingTop","paddingBottom","Loop","EnemyTable","Quest","Map","Enemies","entries","EntryNo","Routes","mapLevel","Level","showDuplicate","setShowDuplicate","showTalk","setShowTalk","Treasure1","Treasure2","Treasure3","Treasure4","Treasure5","treasure","parsedEnemies","parseEnemy","enemyID","EnemyID","enemyGroup","ea","newEnemy","checkedChildren","unCheckedChildren","checked","QuestEventTexts","command","EntryCommand","exec","s","recordIndex","BattleTalkEvents","RecordIndex","PreviewDot","MapTable","useImage","MapName","mapImg","heartImg","nearImg","farImg","setZoom","containerRef","circle","setCircle","setRouteNos","resize","overflow","scaleX","scaleY","image","Locations","LocationNo","img","ObjectID","x","y","c","onTap","onMouseEnter","body","onMouseLeave","radius","stroke","points","strokeWidth","Option","QuestConfigTableRows","QuestConfigMeta","setQuestConfigMeta","Data_Param1","Data_Param2","Data_Param3","Data_Param4","Data_Expression","borderBottom","QuestTermTable","terms","term","showTerms","setShowTerms","showHardTerms","setShowHardTerms","showMissionTalks","setShowMissionTalks","dropper","enemiesCount","haveDrop","drop","reduce","prev","curr","questContainer","questTitle","questInfo","RankExp","Gold","Capacity","QuestTerms","padding","QuestTermConfigs","_HardCondition","HardInfomation","_HardLevel","QuestHardTermConfigs","EventArcs","arc","_TalkerName","_TalkText","Sider","Panel","QuestList","currentMissionType","setCurrentMissionType","missions","Object","groupBy","Missions","theme","sider","onSelect","border","missionListContent","bordered","m","ClassList","currentPage","setCurrentPage","classFilter","unitClass","defaultCurrent","defaultPageSize","page","total","SkillList","skillFilter","handleSetSearch","AbilityList","abilityFilter","EmojiList","drawerVisible","currentEmoji","_id","emoji","group","modalVisible","currentImage","isImg","ext","indexOf","error","span","emojis","deleteIconContainer","mutation","removeEmoji","onConfirm","ID","then","deleteIcon","emojiDrawer","marginBottom","imageBox","imageCover","imageActionContainer","imageAction","removeEmojiItem","onCancel","footer","Login","useForm","getFieldDecorator","validateFields","UserContext","loginForm","prefix","values","block","MissileList","Missiles","withRouter","isLoggedIn","path","component","exact","locale","client","ApolloClient","uri","App","zhCN","Provider","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81af3160.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content--3r6z8\",\"logoblock\":\"logoblock--296BZ\",\"topLogo\":\"topLogo--33_5D\",\"beg\":\"beg--18EC5\",\"postContainer\":\"postContainer--1nDMI\",\"calendarMonthDisabled\":\"calendarMonthDisabled--38ECZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"sider--1H67N\",\"missionListContent\":\"missionListContent--2unrs\",\"ant-collapse-borderless\":\"ant-collapse-borderless--20xt2\",\"mission-type\":\"mission-type--1Gjki\",\"listCard\":\"listCard--2nbjx\"};","module.exports = __webpack_public_path__ + \"static/media/logo.509ca4a9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header--nlkOh\",\"logo\":\"logo--1BJO0\",\"headerMenu\":\"headerMenu--1GBBS\"};","module.exports = __webpack_public_path__ + \"static/media/pay.f5dab129.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1V8Hg\",\"th\":\"th--183Ee\",\"compact\":\"compact--33fUs\",\"fakeInput\":\"fakeInput--334Hy\",\"small\":\"small--1SGOm\",\"configRowGroup\":\"configRowGroup--QsRao\",\"cover\":\"cover--1iRZV\",\"blank\":\"blank--3wN7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--2BMSm\",\"th\":\"th--FnBgT\",\"compact\":\"compact--2d1SD\",\"fakeInput\":\"fakeInput--AyhCo\",\"small\":\"small--3rB9X\",\"configRowGroup\":\"configRowGroup--32G4L\",\"cover\":\"cover--1tVKj\",\"blank\":\"blank--3IOcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--2hG_J\",\"th\":\"th--36mVi\",\"compact\":\"compact--1re4T\",\"fakeInput\":\"fakeInput--3vmc6\",\"small\":\"small--1MzuO\",\"configRowGroup\":\"configRowGroup--1RPUv\",\"cover\":\"cover--1iNDU\",\"blank\":\"blank--25gJl\",\"container\":\"container--goCu8\",\"previewContainer\":\"previewContainer--J9R0N\",\"outerRadioContainer\":\"outerRadioContainer--1EKQe\",\"inset\":\"inset--d9CSK\",\"radioContainer\":\"radioContainer--CSvzk\",\"radioGroup\":\"radioGroup--18PZQ\",\"danger\":\"danger--3p-BL\",\"outerImageContainer\":\"outerImageContainer--2kmJA\",\"imageContainer\":\"imageContainer--2Irjl\",\"textContainer\":\"textContainer--2gsdv\",\"fullScreen\":\"fullScreen--37f7X\",\"closeButton\":\"closeButton--MOFv7\",\"text\":\"text--Jfrlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"loginForm--3OVxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--KBP_i\",\"th\":\"th--12gvq\",\"compact\":\"compact--3h5bu\",\"fakeInput\":\"fakeInput--3j1VW\",\"small\":\"small--3nYGv\",\"configRowGroup\":\"configRowGroup--3r-yE\",\"cover\":\"cover--2XgIG\",\"blank\":\"blank--1AH1E\",\"questContainer\":\"questContainer--1_Nzl\",\"questInfo\":\"questInfo--2d-n2\",\"tableActions\":\"tableActions--5NQPY\",\"enemyRowWithChange\":\"enemyRowWithChange--3o_8I\",\"rowShow\":\"rowShow--1zKw7\"};","import { useState } from 'react';\r\nimport { createContainer } from 'unstated-next';\r\n\r\nfunction useUser() {\r\n  const [state, setState] = useState(localStorage.getItem('fuck') || '');\r\n  return {\r\n    get isLoggedIn() {\r\n      return (\r\n        state === 'fuckpulu' ||\r\n        state === 'fuckbaozitou' ||\r\n        state === 'fuckmaoxiong' ||\r\n        state === 'fucktuo'\r\n      );\r\n    },\r\n    login(token: string) {\r\n      setState(token);\r\n      localStorage.setItem('fuck', token);\r\n    },\r\n  };\r\n}\r\n\r\nexport default createContainer(useUser);\r\n","import { useMediaQuery } from 'react-responsive';\r\nimport { createContainer } from 'unstated-next';\r\n\r\nfunction useMedia() {\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\r\n  return { isTabletOrMobile };\r\n}\r\n\r\nexport default createContainer(useMedia);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport { useLocation } from 'react-router-dom';\r\nimport logo from '../../logo.png';\r\nimport styles from './Header.module.less';\r\n\r\nconst { Header } = Layout;\r\nconst { SubMenu, Item } = Menu;\r\n\r\nconst HeaderBar: React.FC = () => {\r\n  const [active, setActive] = useState('/');\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    setActive(location.pathname.split('/')[1]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Header className={styles.header}>\r\n      <Link to=\"/\">\r\n        <img alt=\"logo\" src={logo} className={styles.logo} />\r\n      </Link>\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        className={styles.headerMenu}\r\n        selectedKeys={[active]}\r\n      >\r\n        <Item key=\"unit\">\r\n          <Link to=\"/unit\">单位</Link>\r\n        </Item>\r\n        <Item key=\"quest\">\r\n          <Link to=\"/quest\">关卡</Link>\r\n        </Item>\r\n        <SubMenu title=\"...\">\r\n          <Item key=\"class\">\r\n            <Link to=\"/class\">职业</Link>\r\n          </Item>\r\n          <Item key=\"skill\">\r\n            <Link to=\"/skill\">技能</Link>\r\n          </Item>\r\n          <Item key=\"ability\">\r\n            <Link to=\"/ability\">被动</Link>\r\n          </Item>\r\n          <Item key=\"missile\">\r\n            <Link to=\"/missile\">子弹</Link>\r\n          </Item>\r\n        </SubMenu>\r\n        {/* <Item key=\"emoji\">\r\n              <Link to=\"/emoji\">机器狗</Link>\r\n            </Item> */}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderBar;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport { CardProps } from 'antd/lib/card';\r\nimport './Card.less';\r\n\r\nexport default class ShadowedCard extends React.Component<\r\n  CardProps\r\n> {\r\n  public render() {\r\n    return <Card {...this.props} className=\"card\" />;\r\n  }\r\n}\r\n","import { Dot, Frame } from './interfaces';\r\n\r\nexport class DefaultGetter {\r\n  private obj: any;\r\n  public constructor(obj: any) {\r\n    this.obj = obj;\r\n  }\r\n  public get(index: string | number) {\r\n    if (index in this.obj) {\r\n      return this.obj[index];\r\n    } else {\r\n      return index.toString();\r\n    }\r\n  }\r\n}\r\n\r\n// random choose a item from a array\r\nexport function choose<T>(arr: T[]) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function renderDescription(source: string) {\r\n  return (\r\n    '<span>' +\r\n    source\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/%c\\[(.{6})\\]/g, '</span><span style=\"color: #$1\">')\r\n      .replace(/\\n/g, '<br />') +\r\n    '</span>'\r\n  );\r\n}\r\n\r\nfunction range(min: number, max: number, length: number) {\r\n  if (length === 1) return [min];\r\n  const res: number[] = [];\r\n  const gap = (max - min) / (length - 1);\r\n  let current = min;\r\n  while (length !== 0) {\r\n    res.push(current);\r\n    current += gap;\r\n    length--;\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function generateTimelines(dots: Dot) {\r\n  const timelines: Frame[][] = [];\r\n  const frameNum = dots.Length;\r\n  for (const entry of dots.Entries) {\r\n    if (!entry.Sprites) {\r\n      continue\r\n    }\r\n    const timeline: Frame[] = [];\r\n    let patternPos = 0;\r\n    for (let t = 0; t <= frameNum; t++) {\r\n      const pattern = entry.PatternNo[patternPos];\r\n      const prevFrame = timeline[timeline.length - 1];\r\n      const frame: Frame = {\r\n        Sprite: prevFrame\r\n          ? { ...prevFrame.Sprite }\r\n          : {\r\n              X: 0,\r\n              Y: 0,\r\n              Width: 0,\r\n              Height: 0,\r\n              OriginX: 0,\r\n              OriginY: 0,\r\n              ParsedX: 0,\r\n              ParsedY: 0,\r\n            },\r\n        Alpha: 1,\r\n        Pos: { X: 0, Y: 0 },\r\n        Scale: { X: 1, Y: 1 },\r\n      };\r\n\r\n      if (\r\n        pattern &&\r\n        (pattern.Time === t ||\r\n          pattern.Time === undefined ||\r\n          pattern.Time === null)\r\n      ) {\r\n        frame.Sprite = {\r\n          ...entry.Sprites[pattern.Data],\r\n          ParsedX: 0,\r\n          ParsedY: 0,\r\n        };\r\n        patternPos++;\r\n      }\r\n\r\n      timeline.push(frame);\r\n      if (pattern && pattern.Time === undefined) break;\r\n    }\r\n\r\n    if (entry.Alpha) {\r\n      for (let alphaPos = 0; alphaPos < entry.Alpha.length - 1; alphaPos++) {\r\n        const prevAlpha = entry.Alpha[alphaPos];\r\n        const nextAlpha = entry.Alpha[alphaPos + 1];\r\n        const alphas = range(\r\n          prevAlpha.Data,\r\n          nextAlpha.Data,\r\n          nextAlpha.Time - prevAlpha.Time + 1,\r\n        );\r\n        for (let t = prevAlpha.Time; t <= nextAlpha.Time; t++) {\r\n          timeline[t].Alpha = alphas[t - prevAlpha.Time];\r\n        }\r\n      }\r\n      if (entry.Alpha.length === 1) {\r\n        for (const frame of timeline) {\r\n          frame.Alpha = entry.Alpha[0].Data;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (entry.Pos) {\r\n      for (let posPos = 0; posPos < entry.Pos.length - 1; posPos++) {\r\n        const prevPos = entry.Pos[posPos];\r\n        const nextPos = entry.Pos[posPos + 1];\r\n        const posesX = range(\r\n          prevPos.Data.X,\r\n          nextPos.Data.X,\r\n          nextPos.Time - prevPos.Time + 1,\r\n        );\r\n        const posesY = range(\r\n          prevPos.Data.Y,\r\n          nextPos.Data.Y,\r\n          nextPos.Time - prevPos.Time + 1,\r\n        );\r\n\r\n        for (let t = prevPos.Time; t <= nextPos.Time; t++) {\r\n          timeline[t].Pos.X = posesX[t - prevPos.Time];\r\n          timeline[t].Pos.Y = posesY[t - prevPos.Time];\r\n        }\r\n      }\r\n\r\n      if (entry.Pos.length === 1) {\r\n        for (const frame of timeline) {\r\n          frame.Pos = { ...entry.Pos[0].Data };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (entry.Scale) {\r\n      for (let scalePos = 0; scalePos < entry.Scale.length - 1; scalePos++) {\r\n        const prevScale = entry.Scale[scalePos];\r\n        const nextScale = entry.Scale[scalePos + 1];\r\n        const scalesX = range(\r\n          prevScale.Data.X,\r\n          nextScale.Data.X,\r\n          nextScale.Time - prevScale.Time + 1,\r\n        );\r\n        const scalesY = range(\r\n          prevScale.Data.Y,\r\n          nextScale.Data.Y,\r\n          nextScale.Time - prevScale.Time + 1,\r\n        );\r\n\r\n        for (let t = prevScale.Time; t <= nextScale.Time; t++) {\r\n          timeline[t].Scale.X = scalesX[t - prevScale.Time];\r\n          timeline[t].Scale.Y = scalesY[t - prevScale.Time];\r\n        }\r\n      }\r\n      if (entry.Scale.length === 1) {\r\n        for (const frame of timeline) {\r\n          frame.Scale = { ...entry.Scale[0].Data };\r\n        }\r\n      }\r\n    }\r\n\r\n    timelines.push(timeline);\r\n  }\r\n\r\n  timelines.forEach(timeline =>\r\n    timeline.forEach(frame => {\r\n      frame.Sprite.ParsedX =\r\n        frame.Sprite.OriginX -\r\n        frame.Pos.X +\r\n        (frame.Sprite.Width / 2) * (frame.Scale.X - 1);\r\n      frame.Sprite.ParsedY =\r\n        frame.Sprite.OriginY -\r\n        frame.Pos.Y +\r\n        frame.Sprite.Height * (frame.Scale.Y - 1);\r\n    }),\r\n  );\r\n\r\n  return timelines;\r\n}\r\n","import { DefaultGetter } from './utils';\r\nexport const BASE_SERVER_URL =\r\n  process.env.REACT_APP_SERVER || 'https://aigisapi.naberi.us';\r\n// export const BASE_SERVER_URL = 'http://localhost:4000';\r\nexport const BASE_GAME_URL = 'https://drc1bk94f7rq8.cloudfront.net';\r\nexport const GAME_POSTER_URL = BASE_GAME_URL + '/00/html/image';\r\nexport const API_URL = BASE_SERVER_URL + '/graphql';\r\nexport const STATIC_URL = BASE_SERVER_URL + '/static';\r\nexport const PLAYER_DOT_URL = STATIC_URL + '/playerDot';\r\nexport const ENEMY_DOT_URL = STATIC_URL + '/enemyDot';\r\nexport const BATTLE_TALK_EVENT_URL = STATIC_URL + '/battleTalkEvent';\r\nexport const EMOJI_URL = STATIC_URL + '/cqp';\r\nexport const ICO_URL = STATIC_URL + '/ico';\r\nexport const BANNER_URL = STATIC_URL + '/banner';\r\nexport const PLAYER_STAND_CG_URL = STATIC_URL + '/standCG';\r\nexport const PLAYER_HARLEM_CG_URL = STATIC_URL + '/harlemCG';\r\nexport const MAP_IMAGE_URL = STATIC_URL + '/map';\r\n\r\nexport const ENEMY_CHANGE_COND: { [k: number]: string } = {\r\n  0: '条件切换',\r\n  1: '阻挡切换',\r\n  2: '死亡切换',\r\n  3: '半血切换',\r\n  4: '一次性攻击切换',\r\n  5: '血量99%切换',\r\n};\r\nexport const BONUS_TYPE = new DefaultGetter({\r\n  1: 'HP +%d',\r\n  2: '攻击 +%d',\r\n  3: '防御 +%d',\r\n  4: '射程 +%d',\r\n  5: '魔抗 +%d',\r\n  6: '后摇 -%d',\r\n  7: '技能持续 +%d%',\r\n  8: '技能再动 -%d%',\r\n  9: '物理攻击回避 +%d%',\r\n  11: '贯通概率 +%d%',\r\n});\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport { choose } from '../../utils';\r\nimport { SpinProps } from 'antd/lib/spin';\r\n\r\nconst fuck = ['氆氇', '脱', '包子头', '毛熊', 'ED'];\r\n\r\nconst Loading: React.FC<SpinProps> = ({ ...props }) => (\r\n  <Spin\r\n    tip={`干${choose(fuck)}中...`}\r\n    size=\"large\"\r\n    style={{ marginTop: '20vh', display: 'block' }}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Layout, Col, Popover, Calendar, Row, Button } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport moment from 'moment';\r\nimport Card from 'Components/Card';\r\nimport logo from 'logo.png';\r\nimport payImage from './pay.png';\r\nimport styles from './Home.module.less';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { BANNER_URL, GAME_POSTER_URL } from 'consts';\r\nimport classNames from 'classnames';\r\nimport Loading from 'Components/Loading';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Home: React.FC = () => {\r\n  const [date, setDate] = useState<moment.Moment>();\r\n  const [selectedDate, setSelectedDate] = useState<moment.Moment>();\r\n  const { loading, data } = useQuery<{\r\n    UpdateTime: number;\r\n    Posters: string[];\r\n    Banners: string[];\r\n  }>(\r\n    gql`\r\n      query {\r\n        UpdateTime\r\n        Posters\r\n        Banners\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: d => {\r\n        if (d.Posters.length > 0) {\r\n          const posterName = d.Posters[d.Posters.length - 1];\r\n          setSelectedDate(moment(posterName.slice(5, 13), 'YYYYMMDD'));\r\n        }\r\n      },\r\n    },\r\n  );\r\n\r\n  const posterRef = useRef<HTMLImageElement>(null);\r\n  const [posterLoading, setPosterLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      data?.Posters.includes(`event${selectedDate?.format('YYYYMMDD')}.jpg`)\r\n    ) {\r\n      setDate(selectedDate);\r\n    }\r\n  }, [data, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (date && posterRef.current) {\r\n      posterRef.current.src = `${GAME_POSTER_URL}/event${date.format(\r\n        'YYYYMMDD',\r\n      )}.jpg`;\r\n      setPosterLoading(true);\r\n    }\r\n  }, [date]);\r\n\r\n  return (\r\n    <Content className={styles.content + ' container'}>\r\n      <div className={styles.logoblock}>\r\n        <img alt=\"logo\" src={logo} className={styles.topLogo} />\r\n        <h1>Naberius</h1>\r\n      </div>\r\n      <Card loading={loading}>\r\n        {!loading && data && (\r\n          <div>\r\n            更新时间：\r\n            <time>{moment(data.UpdateTime).fromNow()}</time>\r\n          </div>\r\n        )}\r\n      </Card>\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={12}>\r\n          <Card loading={loading} style={{ marginTop: 16 }}>\r\n            <h2>卡池</h2>\r\n            {data &&\r\n              data.Banners.map(bannerName => (\r\n                <img\r\n                  alt={bannerName}\r\n                  key={bannerName}\r\n                  src={`${BANNER_URL}/${bannerName}`}\r\n                  style={{ maxWidth: '100%' }}\r\n                />\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          <Card loading={loading} style={{ marginTop: 16 }}>\r\n            <h2>海报</h2>\r\n            <Calendar\r\n              value={selectedDate || moment()}\r\n              onChange={value => {\r\n                setSelectedDate(value);\r\n              }}\r\n              fullscreen={false}\r\n              monthFullCellRender={value => {\r\n                const first = data?.Posters.find(p =>\r\n                  p.startsWith(`event${value.format('YYYYMM')}`),\r\n                );\r\n                return (\r\n                  <div className=\"ant-fullcalendar-month\">\r\n                    <div\r\n                      className={classNames('ant-fullcalendar-value', {\r\n                        [styles.calendarMonthDisabled]: !first,\r\n                      })}\r\n                      onClick={() =>\r\n                        first &&\r\n                        setSelectedDate(moment(first.slice(5, 13), 'YYYYMMDD'))\r\n                      }\r\n                    >\r\n                      {value.localeData().monthsShort(value)}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n              disabledDate={value => {\r\n                if (data) {\r\n                  for (const posterName of data.Posters) {\r\n                    if (posterName === `event${value.format('YYYYMMDD')}.jpg`)\r\n                      return false;\r\n                  }\r\n                }\r\n                return true;\r\n              }}\r\n            />\r\n            <Loading spinning={posterLoading}>\r\n              {date && (\r\n                <img\r\n                  ref={posterRef}\r\n                  onLoad={() => setPosterLoading(false)}\r\n                  alt={date.format('YYYY/MM/DD')}\r\n                  style={{ width: '100%' }}\r\n                />\r\n              )}\r\n            </Loading>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <div className={styles.beg}>\r\n        <Popover\r\n          placement=\"top\"\r\n          trigger=\"click\"\r\n          content={\r\n            <img\r\n              alt=\"唯一指定邮箱minalinskyx#hotmail.com，您pay吗\"\r\n              src={payImage}\r\n              width={500}\r\n            />\r\n          }\r\n        >\r\n          <Button type=\"primary\">\r\n            给魔狗买一杯\r\n            <span role=\"img\" aria-label=\"coffee\">\r\n              ☕️\r\n            </span>\r\n          </Button>\r\n        </Popover>\r\n      </div>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Rarity: React.FC<{ rare: number }> = ({ rare }) => {\r\n  switch (rare) {\r\n    case 0:\r\n      return <span style={{ color: 'grey' }}>★</span>;\r\n    case 1:\r\n      return <span style={{ color: 'brown' }}>★★</span>;\r\n    case 2:\r\n      return <span style={{ color: 'silver' }}>★★★</span>;\r\n    case 3:\r\n      return <span style={{ color: 'gold' }}>★★★★</span>;\r\n    case 4:\r\n      return <span>☆☆☆☆☆</span>;\r\n    case 5:\r\n      return <span style={{ color: 'black' }}>★★★★★★</span>;\r\n    case 7:\r\n      return <span style={{ color: 'blue' }}>SAPPHIRE</span>;\r\n    case 10:\r\n      return <span style={{ textShadow: '0 0 1px deepskyblue' }}>☆☆☆☆☆</span>;\r\n    case 11:\r\n      return (\r\n        <span style={{ textShadow: '0 0 1px gold', color: 'black' }}>\r\n          ★★★★★★\r\n        </span>\r\n      );\r\n    default:\r\n      return <span>UNKNOWN</span>;\r\n  }\r\n};\r\n\r\nexport default Rarity;\r\n","import React from 'react';\r\nimport { Row, Col, Tag } from 'antd';\r\nimport Rarity from '../../Rarity';\r\nimport styles from './UnitList.module.less';\r\nimport { ICO_URL } from '../../../consts';\r\nimport { Card } from './types';\r\nimport classNames from 'classnames';\r\n\r\ninterface UnitListCardProps {\r\n  card: Card;\r\n  showUnit: (cardID: string) => void;\r\n  setFilter: (search: string, searchType: string) => void;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\ninterface FormFields {\r\n  nickName: string;\r\n  conneName: string;\r\n}\r\n\r\nconst UnitListCard: React.FC<UnitListCardProps> = ({\r\n  card,\r\n  showUnit,\r\n  setFilter,\r\n  style,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={style}\r\n      className={classNames(styles.listCard, {\r\n        [styles.male]: Number.parseInt(card.Kind) === 1,\r\n        [styles.female]: Number.parseInt(card.Kind) === 0,\r\n      })}\r\n    >\r\n      <Row\r\n        type=\"flex\"\r\n        style={{ alignItems: 'center' }}\r\n        onClick={() => showUnit(card.CardID)}\r\n      >\r\n        <Col md={2} xs={3}>\r\n          {card.CardID}\r\n        </Col>\r\n        <Col md={2} xs={5}>\r\n          <img\r\n            src={`${ICO_URL}/0/${card.CardID}.png`}\r\n            alt={card.CardID.toString()}\r\n            height=\"48\"\r\n          />\r\n        </Col>\r\n        <Col md={4} xs={16}>\r\n          <Rarity rare={Number.parseInt(card.Rare, 10)} />\r\n          <br />\r\n          {card.Name}\r\n        </Col>\r\n        <Col lg={6} xs={0}>\r\n          {card.RaceName && (\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setFilter(card.RaceName, 'RaceName');\r\n              }}\r\n            >\r\n              <Tag>{card.RaceName}</Tag>\r\n            </span>\r\n          )}\r\n          {card.AssignName && (\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setFilter(card.AssignName, 'AssignName');\r\n              }}\r\n            >\r\n              <Tag color=\"magenta\">{card.AssignName}</Tag>\r\n            </span>\r\n          )}\r\n          {card.IdentityName && (\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setFilter(card.IdentityName, 'IdentityName');\r\n              }}\r\n            >\r\n              <Tag color=\"black\">{card.IdentityName}</Tag>\r\n            </span>\r\n          )}\r\n          {card.GenusName && (\r\n            <span\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setFilter(card.GenusName, 'GenusName');\r\n              }}\r\n            >\r\n              <Tag color=\"blue\">{card.GenusName}</Tag>\r\n            </span>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          lg={5}\r\n          md={8}\r\n          xs={0}\r\n          className=\"filter\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setFilter(card.Classes[0].Name, 'Classes.0.Name');\r\n          }}\r\n        >\r\n          {card.Classes[0].Name}\r\n        </Col>\r\n        <Col\r\n          lg={5}\r\n          md={8}\r\n          xs={0}\r\n          className=\"filter\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setFilter(card.IllustName, 'IllustName');\r\n          }}\r\n        >\r\n          {card.IllustName}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitListCard;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const DotFragment = gql`\r\n  fragment Dot on Dot {\r\n    Name\r\n    Length\r\n    Entries {\r\n      Sprites {\r\n        X\r\n        Y\r\n        Width\r\n        Height\r\n        OriginX\r\n        OriginY\r\n      }\r\n      PatternNo {\r\n        Time\r\n        Data\r\n      }\r\n      Pos {\r\n        Time\r\n        Data {\r\n          X\r\n          Y\r\n        }\r\n      }\r\n      Scale {\r\n        Time\r\n        Data {\r\n          X\r\n          Y\r\n        }\r\n      }\r\n      Alpha {\r\n        Time\r\n        Data\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MissileFragment = gql`\r\n  fragment missile on Missile {\r\n    MissileID\r\n    PatternID\r\n    Enemy\r\n    Speed\r\n    SlowTime\r\n    SlowRate\r\n    DamageArea\r\n    Property\r\n  }\r\n`;\r\n\r\nexport const EnemyFragment = gql`\r\n  fragment enemy on Enemy {\r\n    DotRate\r\n    HitEffect\r\n    MissileID\r\n    DeadEffect\r\n    SpecialEffect\r\n    PatternID\r\n    Weather\r\n    HP\r\n    HP_MAX\r\n    ATTACK_POWER\r\n    TypeAttack\r\n    ATTACK_RANGE\r\n    ATTACK_SPEED\r\n    ARMOR_DEFENSE\r\n    MAGIC_DEFENSE\r\n    MOVE_SPEED\r\n    SKILL\r\n    SkyFlag\r\n    GainCost\r\n    EffectHeight\r\n    MagicAttack\r\n    AttackWait\r\n    MissileID\r\n    Missile {\r\n      ...missile\r\n    }\r\n    DeadEffect\r\n    Param_ResistanceAssassin\r\n    Param_ChangeParam\r\n    Param_ChangeCondition\r\n    SpecialtyConfigs {\r\n      Type_Influence\r\n      Param_1\r\n      Param_2\r\n      Param_3\r\n      Param_4\r\n      _Expression\r\n      _ExtParam\r\n      Comment\r\n    }\r\n    EnemyElem {\r\n      _EnemyElementName\r\n    }\r\n    EnemyType {\r\n      _EnemyTypeName\r\n    }\r\n    Dots {\r\n      ...Dot\r\n    }\r\n    _Attribute\r\n  }\r\n  ${MissileFragment}\r\n`;\r\n","import gql from 'graphql-tag';\r\nimport { Card } from 'interfaces';\r\nimport { DotFragment, MissileFragment } from 'fragments';\r\n\r\nexport interface Data {\r\n  Card: Card;\r\n}\r\n\r\nexport const query = gql`\r\n  query($id: Int!) {\r\n    Card(CardID: $id) {\r\n      SpecialtyConfigs {\r\n        ID_Card\r\n        Type_Specialty\r\n        Value_Specialty\r\n        Value_Param1\r\n        Value_Param2\r\n        Value_Param3\r\n        Value_Param4\r\n        Command\r\n        Comment\r\n      }\r\n      CardID\r\n      _AwakePattern\r\n      HarlemTextR\r\n      HarlemTextA\r\n      Name\r\n      Rare\r\n      Kind\r\n      MaxHPMod\r\n      AtkMod\r\n      DefMod\r\n      CostModValue\r\n      CostDecValue\r\n      MagicResistance\r\n      BonusType\r\n      BonusNum\r\n      BonusType2\r\n      BonusNum2\r\n      BonusType3\r\n      BonusNum3\r\n      RaceName\r\n      AssignName\r\n      IdentityName\r\n      IllustName\r\n      HomeCooking\r\n      SellPrice\r\n      BuildExp\r\n      _TradePoint\r\n      ConneName\r\n      NickNames\r\n      Dots {\r\n        ...Dot\r\n      }\r\n      Classes {\r\n        JobChange\r\n        AttackAttribute\r\n        Missile {\r\n          ...missile\r\n        }\r\n        Cards {\r\n          Rare\r\n          CardID\r\n          Name\r\n        }\r\n        Type\r\n        ClassID\r\n        Name\r\n        InitHP\r\n        MaxHP\r\n        InitDef\r\n        MaxDef\r\n        InitAtk\r\n        MaxAtk\r\n        AtkArea\r\n        BlockNum\r\n        MaxLevel\r\n        Explanation\r\n        Cost\r\n        NickNames\r\n        Data_ExtraAwakeOrbs {\r\n          Name\r\n        }\r\n        AttackWait\r\n        ClassAbilityConfigs {\r\n          _InvokeType\r\n          _TargetType\r\n          _InfluenceType\r\n          _Param1\r\n          _Param2\r\n          _Param3\r\n          _Param4\r\n          _Command\r\n          _ActivateCommand\r\n          Comment\r\n        }\r\n        ClassAbilityPower1\r\n        BattleStyle {\r\n          Data_ID\r\n          Type_BattleStyle\r\n          _Param_01\r\n          _Param_02\r\n          _Range_01\r\n          _Range_02\r\n          _Range_03\r\n          _Range_04\r\n          _Range_05\r\n        }\r\n      }\r\n      ImageCG\r\n      ImageStand\r\n      Abilities {\r\n        Cards {\r\n          Rare\r\n          CardID\r\n          Name\r\n        }\r\n        Type\r\n        AbilityID\r\n        Text\r\n        AbilityName\r\n        Configs {\r\n          _InvokeType\r\n          _TargetType\r\n          _InfluenceType\r\n          _Param1\r\n          _Param2\r\n          _Param3\r\n          _Param4\r\n          _Command\r\n          _ActivateCommand\r\n          Comment\r\n        }\r\n      }\r\n      ClassLV0SkillID\r\n      ClassLV1SkillID\r\n      Skills {\r\n        Type\r\n        Skills {\r\n          SkillName\r\n          WaitTime\r\n          ContTimeMax\r\n          PowerMax\r\n          LevelMax\r\n          Text\r\n          SkillID\r\n          Cards {\r\n            Rare\r\n            Name\r\n            CardID\r\n          }\r\n          Configs {\r\n            Type_Collision\r\n            Type_CollisionState\r\n            Type_ChangeFunction\r\n            Data_Target\r\n            Data_InfluenceType\r\n            Data_MulValue\r\n            Data_MulValue2\r\n            Data_MulValue3\r\n            Data_AddValue\r\n            _HoldRatioUpperLimit\r\n            _Expression\r\n            _ExpressionActivate\r\n            Comment\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${DotFragment}\r\n  ${MissileFragment}\r\n`;\r\n","import React from 'react';\r\n\r\nconst Gender: React.FC<{ gender: number }> = ({ gender }) => {\r\n  if (gender === 0) {\r\n    return <span style={{ color: 'blue' }}>♂</span>;\r\n  } else if (gender === 1) {\r\n    return <span style={{ color: 'red' }}>♀</span>;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Gender;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './SkillTable.module.less';\r\nimport { Button, Row, Col, Input, message, Spin } from 'antd';\r\nimport { renderDescription } from '../../utils';\r\nimport { SkillData, SkillConfig } from 'interfaces';\r\nimport MediaContext from 'context/MediaContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { ICO_URL } from 'consts';\r\nimport classNames from 'classnames';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\n\r\nconst SKILL_TYPE = {\r\n  Init: '初始',\r\n  CC: 'CC',\r\n  Evo: '技觉',\r\n};\r\n\r\nconst SkillConfigTableRows: React.FC<{ config: SkillConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setSkillConfigMeta, { loading, data }] = useMutation<{\r\n    SkillConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation ($TypeID: Int!, $Comment: String) {\r\n        SkillConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: (d) => {\r\n        setValue(d?.SkillConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setSkillConfigMeta({\r\n      variables: { TypeID: config.Data_InfluenceType, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.SkillConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.SkillConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>{config.Data_InfluenceType}</td>\r\n        <td>{config.Data_MulValue}</td>\r\n        <td>{config.Data_MulValue2}</td>\r\n        <td>{config._HoldRatioUpperLimit || config.Data_MulValue3}</td>\r\n        <td>{config.Data_AddValue}</td>\r\n        <td>{config.Type_Collision}</td>\r\n        <td>{config.Type_CollisionState}</td>\r\n        <td>{config.Data_Target}</td>\r\n      </tr>\r\n      {(config._ExpressionActivate !== '' || config._Expression !== '') && (\r\n        <tr>\r\n          <td\r\n            colSpan={4}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._Expression}\r\n          </td>\r\n          <td\r\n            colSpan={4}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._ExpressionActivate}\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst SkillTableRows: React.FC<{ skill: SkillData }> = ({ skill }) => {\r\n  const [showConfigs, setShowConfigs] = useState(false);\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n  const secondRow = (\r\n    <>\r\n      <td>{skill.LevelMax}</td>\r\n      <td>{skill.ContTimeMax}</td>\r\n      <td>{skill.WaitTime - skill.LevelMax}</td>\r\n      <td>{skill.PowerMax}</td>\r\n      <td>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => setShowConfigs(!showConfigs)}\r\n          icon={showConfigs ? 'up' : 'down'}\r\n        />\r\n      </td>\r\n    </>\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <th colSpan={isTabletOrMobile ? 2 : 1}>\r\n          <small>#{skill.SkillID}</small>\r\n          {skill.SkillName}\r\n        </th>\r\n        <td\r\n          colSpan={isTabletOrMobile ? 3 : 1}\r\n          style={{ textAlign: 'left' }}\r\n          dangerouslySetInnerHTML={{\r\n            __html: renderDescription(skill.Text),\r\n          }}\r\n        />\r\n        {!isTabletOrMobile && secondRow}\r\n      </tr>\r\n      {isTabletOrMobile && <tr>{secondRow}</tr>}\r\n      {showConfigs && (\r\n        <tr>\r\n          <td colSpan={isTabletOrMobile ? 5 : 7}>\r\n            <Row gutter={8}>\r\n              <Col xs={24} md={12}>\r\n                <table\r\n                  className={styles.table}\r\n                  style={{ tableLayout: 'fixed' }}\r\n                >\r\n                  <tbody>\r\n                    <tr>\r\n                      <th style={{ width: '6em' }}>拥有的卡</th>\r\n                      <td>\r\n                        {skill.Cards.sort(\r\n                          (c1, c2) =>\r\n                            Number.parseInt(c2.Rare, 10) -\r\n                            Number.parseInt(c1.Rare, 10),\r\n                        ).map((card) => (\r\n                          <Link key={card.CardID} to={`/unit/${card.CardID}`}>\r\n                            <img\r\n                              alt={card.CardID.toString()}\r\n                              style={{ width: 40, marginLeft: 8 }}\r\n                              src={`${ICO_URL}/0/${card.CardID}.png`}\r\n                            />\r\n                            {card.Name}\r\n                          </Link>\r\n                        ))}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </Col>\r\n              <Col xs={24} md={12}>\r\n                <table\r\n                  className={styles.table}\r\n                  style={{\r\n                    tableLayout: 'fixed',\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  <thead>\r\n                    <tr>\r\n                      <th>类型</th>\r\n                      <th>効果</th>\r\n                      <th>差分</th>\r\n                      <th>固定</th>\r\n                      <th>加算</th>\r\n                      <th>冲突</th>\r\n                      <th>状态</th>\r\n                      <th>对象</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th colSpan={4}>条件</th>\r\n                      <th colSpan={4}>发动条件</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {skill.Configs.map((config, index) => (\r\n                    <SkillConfigTableRows config={config} key={index} />\r\n                  ))}\r\n                </table>\r\n              </Col>\r\n            </Row>\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst SkillTable: React.FC<{\r\n  skills: SkillData[];\r\n  type?: keyof typeof SKILL_TYPE;\r\n}> = ({ skills, type }) => {\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        {type && (\r\n          <tr>\r\n            <td colSpan={7}>{SKILL_TYPE[type]}</td>\r\n          </tr>\r\n        )}\r\n        <tr>\r\n          {!isTabletOrMobile && (\r\n            <>\r\n              <td style={{ width: 200 }} />\r\n              <th>描述</th>\r\n            </>\r\n          )}\r\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>等级</th>\r\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>持续</th>\r\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>再动</th>\r\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>强度</th>\r\n          <th style={{ width: isTabletOrMobile ? '20%' : 60 }}>详细</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {skills.map((skill, index) => (\r\n          <SkillTableRows key={index} skill={skill} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SkillTable;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './AbilityTable.module.less';\r\nimport { renderDescription } from '../../utils';\r\nimport { Button, Row, Col, Input, message, Spin } from 'antd';\r\nimport { AbilityData, AbilityConfig } from 'interfaces';\r\nimport MediaContext from 'context/MediaContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { ICO_URL } from 'consts';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport classNames from 'classnames';\r\n\r\nconst ABILITY_TYPE = {\r\n  Init: '初始',\r\n  Evo: '觉醒',\r\n};\r\n\r\nconst AbilityConfigTableRows: React.FC<{ config: AbilityConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setAbilityConfigMeta, { loading, data }] = useMutation<{\r\n    AbilityConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation ($TypeID: Int!, $Comment: String) {\r\n        AbilityConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: (d) => {\r\n        setValue(d?.AbilityConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setAbilityConfigMeta({\r\n      variables: { TypeID: config._InfluenceType, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.AbilityConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.AbilityConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>{config._InfluenceType}</td>\r\n        <td>{config._Param1}</td>\r\n        <td>{config._Param2}</td>\r\n        <td>{config._Param3}</td>\r\n        <td>{config._Param4}</td>\r\n        <td>{config._InvokeType}</td>\r\n        <td>{config._TargetType}</td>\r\n      </tr>\r\n      {(config._Command !== '' || config._ActivateCommand !== '') && (\r\n        <tr>\r\n          <td\r\n            colSpan={3}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._Command}\r\n          </td>\r\n          <td\r\n            colSpan={4}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._ActivateCommand}\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst AbilityTable: React.FC<{ ability: AbilityData }> = ({ ability }) => {\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n  const [showConfigs, setShowConfigs] = useState(false);\r\n  return (\r\n    <table className={styles.table}>\r\n      <tbody>\r\n        {isTabletOrMobile && ability.Type && (\r\n          <tr>\r\n            <td colSpan={3}>{ABILITY_TYPE[ability.Type]}</td>\r\n          </tr>\r\n        )}\r\n        {!isTabletOrMobile && (\r\n          <tr>\r\n            <td>{ABILITY_TYPE[ability.Type]}</td>\r\n            <th>描述</th>\r\n            <th>详细</th>\r\n          </tr>\r\n        )}\r\n        <tr>\r\n          <th style={{ width: '30%' }}>\r\n            <small>#{ability.AbilityID}</small>\r\n            {ability.AbilityName}\r\n          </th>\r\n          <td\r\n            style={{ textAlign: 'left' }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: renderDescription(ability.Text),\r\n            }}\r\n          />\r\n          <td style={{ width: 50 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => setShowConfigs(!showConfigs)}\r\n              icon={showConfigs ? 'up' : 'down'}\r\n            />\r\n          </td>\r\n        </tr>\r\n        {showConfigs && (\r\n          <tr>\r\n            <td colSpan={3}>\r\n              <Row gutter={8}>\r\n                <Col xs={24} md={12}>\r\n                  <table\r\n                    className={styles.table}\r\n                    style={{\r\n                      tableLayout: 'fixed',\r\n                    }}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <th style={{ width: '6em' }}>拥有的卡</th>\r\n                        <td>\r\n                          {ability.Cards.sort(\r\n                            (c1, c2) =>\r\n                              Number.parseInt(c2.Rare, 10) -\r\n                              Number.parseInt(c1.Rare, 10),\r\n                          ).map((card) => (\r\n                            <Link key={card.CardID} to={`/unit/${card.CardID}`}>\r\n                              <img\r\n                                alt={card.CardID.toString()}\r\n                                style={{ width: 40, marginLeft: 8 }}\r\n                                src={`${ICO_URL}/0/${card.CardID}.png`}\r\n                              />\r\n                              {card.Name}\r\n                            </Link>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                  <table\r\n                    className={styles.table}\r\n                    style={{\r\n                      tableLayout: 'fixed',\r\n                      position: 'relative',\r\n                    }}\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>类型</th>\r\n                        <th>p1</th>\r\n                        <th>p2</th>\r\n                        <th>p3</th>\r\n                        <th>p4</th>\r\n                        <th>发动</th>\r\n                        <th>对象</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan={3}>条件</th>\r\n                        <th colSpan={4}>发动条件</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {ability.Configs.map((config, index) => (\r\n                      <AbilityConfigTableRows key={index} config={config} />\r\n                    ))}\r\n                  </table>\r\n                </Col>\r\n              </Row>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default AbilityTable;\r\n","import React from 'react';\r\nimport { Missile } from 'interfaces';\r\nimport styles from './MissileTable.module.less';\r\nimport MediaContext from 'context/MediaContext';\r\n\r\nconst MissileTable: React.FC<{\r\n  missile: Missile;\r\n  compact?: boolean;\r\n}> = ({ missile, compact = false }) => {\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n  const isCompact = isTabletOrMobile || compact;\r\n  return (\r\n    <table className={styles.table} style={{ tableLayout: 'fixed' }}>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>点阵</th>\r\n          <th>是否敌人</th>\r\n          <th>速度</th>\r\n          <th>减速时间</th>\r\n          <th>减速比例</th>\r\n          <th>溅射</th>\r\n          {!isCompact && <th>属性</th>}\r\n        </tr>\r\n        {!!(isCompact && missile.Property) && (\r\n          <tr>\r\n            <th colSpan={7}>属性</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{missile.MissileID}</td>\r\n          <td>{missile.PatternID.toString(16)}</td>\r\n          <td>{missile.Enemy ? '是' : '否'}</td>\r\n          <td>{missile.Speed}</td>\r\n          <td>{missile.SlowTime}</td>\r\n          <td>{missile.SlowRate}</td>\r\n          <td>{missile.DamageArea}</td>\r\n          {!isCompact && <td>{missile.Property}</td>}\r\n        </tr>\r\n        {!!(missile.Property && isCompact) && (\r\n          <tr>\r\n            <td colSpan={7}>{missile.Property}</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default MissileTable;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './ClassTable.module.less';\r\nimport { renderDescription } from '../../utils';\r\nimport { Button, Row, Col, Select, Spin, Tag, message, Input } from 'antd';\r\nimport { ClassData, AbilityConfig } from 'interfaces';\r\nimport MediaContext from 'context/MediaContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { ICO_URL } from 'consts';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport MissileTable from 'Components/MissileTable';\r\nimport classNames from 'classnames';\r\n\r\nconst CLASS_TYPE = {\r\n  Init: '初始',\r\n  CC: 'CC',\r\n  Evo: '觉醒',\r\n  Evo2a: '二觉A',\r\n  Evo2b: '二觉B',\r\n};\r\n\r\nconst AbilityConfigTableRows: React.FC<{ config: AbilityConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setAbilityConfigMeta, { loading, data }] = useMutation<{\r\n    AbilityConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation ($TypeID: Int!, $Comment: String) {\r\n        AbilityConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: (d) => {\r\n        setValue(d?.AbilityConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setAbilityConfigMeta({\r\n      variables: { TypeID: config._InfluenceType, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.AbilityConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.AbilityConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>{config._InfluenceType}</td>\r\n        <td>{config._Param1}</td>\r\n        <td>{config._Param2}</td>\r\n        <td>{config._Param3}</td>\r\n        <td>{config._Param4}</td>\r\n        <td>{config._InvokeType}</td>\r\n        <td>{config._TargetType}</td>\r\n      </tr>\r\n      {(config._Command !== '' || config._ActivateCommand !== '') && (\r\n        <tr>\r\n          <td\r\n            colSpan={3}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._Command}\r\n          </td>\r\n          <td\r\n            colSpan={4}\r\n            style={{\r\n              wordWrap: 'break-word',\r\n            }}\r\n          >\r\n            {config._ActivateCommand}\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst ClassTable: React.FC<{\r\n  classData: ClassData;\r\n  onCompleted?: () => any;\r\n}> = ({ classData, onCompleted }) => {\r\n  const [showConfigs, setShowConfigs] = useState(false);\r\n\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n\r\n  const [setClassMeta, { loading }] = useMutation(\r\n    gql`\r\n      mutation ($ClassID: Int!, $NickNames: [String!]!) {\r\n        ClassMeta(ClassID: $ClassID, NickNames: $NickNames) {\r\n          NickNames\r\n        }\r\n      }\r\n    `,\r\n    { onCompleted },\r\n  );\r\n\r\n  const [value, setValue] = useState(classData.NickNames || []);\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Select<string[]>>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setClassMeta({\r\n      variables: { ClassID: classData.ClassID, NickNames: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <table className={styles.table}>\r\n      <tbody>\r\n        {isTabletOrMobile && classData.Type && (\r\n          <tr>\r\n            <td colSpan={isTabletOrMobile ? 3 : 5}>\r\n              {CLASS_TYPE[classData.Type]}\r\n            </td>\r\n          </tr>\r\n        )}\r\n        <tr>\r\n          {!isTabletOrMobile && (\r\n            <>\r\n              <td style={{ width: 200 }}>{CLASS_TYPE[classData.Type]}</td>\r\n              <th>描述</th>\r\n            </>\r\n          )}\r\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>后摇</th>\r\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>被动</th>\r\n          <th style={{ width: isTabletOrMobile ? '33.33%' : 100 }}>详细</th>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            <small>#{classData.ClassID}</small>\r\n            {classData.Name}\r\n          </th>\r\n          <td\r\n            colSpan={isTabletOrMobile ? 2 : 1}\r\n            style={{ textAlign: 'left' }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: renderDescription(classData.Explanation),\r\n            }}\r\n          />\r\n          {!isTabletOrMobile && (\r\n            <>\r\n              <td>{classData.AttackWait}</td>\r\n              <td>{classData.ClassAbilityPower1}</td>\r\n              <td>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  onClick={() => setShowConfigs(!showConfigs)}\r\n                  icon={showConfigs ? 'up' : 'down'}\r\n                />\r\n              </td>\r\n            </>\r\n          )}\r\n        </tr>\r\n        {isTabletOrMobile && (\r\n          <tr>\r\n            <td>{classData.AttackWait}</td>\r\n            <td>{classData.ClassAbilityPower1}</td>\r\n            <td>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => setShowConfigs(!showConfigs)}\r\n                icon={showConfigs ? 'up' : 'down'}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {showConfigs && (\r\n          <tr>\r\n            <td colSpan={isTabletOrMobile ? 3 : 5}>\r\n              <Row gutter={8}>\r\n                <Col xs={24} md={12}>\r\n                  <table\r\n                    style={{\r\n                      tableLayout: 'fixed',\r\n                    }}\r\n                    className={styles.table}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <th style={{ width: '6em' }}>昵称</th>\r\n                        <td>\r\n                          {editing ? (\r\n                            <Spin spinning={loading}>\r\n                              <Select<string[]>\r\n                                mode=\"tags\"\r\n                                tokenSeparators={[',', ' ']}\r\n                                ref={ref}\r\n                                value={value}\r\n                                onChange={(v) => setValue(v)}\r\n                                onBlur={handleSave}\r\n                                style={{ width: '100%' }}\r\n                              />\r\n                            </Spin>\r\n                          ) : (\r\n                            <div\r\n                              onClick={() => setEditing(true)}\r\n                              className={styles.fakeInput}\r\n                            >\r\n                              {classData.NickNames &&\r\n                                classData.NickNames.map((name, index) => (\r\n                                  <Tag key={index}>{name}</Tag>\r\n                                ))}\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>拥有的卡</th>\r\n                        <td>\r\n                          {classData.Cards.sort(\r\n                            (c1, c2) =>\r\n                              Number.parseInt(c2.Rare, 10) -\r\n                              Number.parseInt(c1.Rare, 10),\r\n                          ).map((card) => (\r\n                            <Link key={card.CardID} to={`/unit/${card.CardID}`}>\r\n                              <img\r\n                                alt={card.CardID.toString()}\r\n                                style={{ width: 40, marginLeft: 8 }}\r\n                                src={`${ICO_URL}/0/${card.CardID}.png`}\r\n                              />\r\n                              {card.Name}\r\n                            </Link>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>职业类型</th>\r\n                        <td>{classData.AttackAttribute}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n\r\n                  {classData.Missile && (\r\n                    <MissileTable missile={classData.Missile} compact />\r\n                  )}\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                  <table\r\n                    className={styles.table}\r\n                    style={{\r\n                      tableLayout: 'fixed',\r\n                      position: 'relative',\r\n                    }}\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>类型</th>\r\n                        <th>p1</th>\r\n                        <th>p2</th>\r\n                        <th>p3</th>\r\n                        <th>p4</th>\r\n                        <th>发动</th>\r\n                        <th>对象</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th colSpan={3}>条件</th>\r\n                        <th colSpan={4}>发动条件</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {classData.ClassAbilityConfigs.map((config, index) => (\r\n                      <AbilityConfigTableRows key={index} config={config} />\r\n                    ))}\r\n                  </table>\r\n                </Col>\r\n              </Row>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ClassTable;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { PLAYER_DOT_URL, ENEMY_DOT_URL } from '../../consts';\r\nimport { Dot } from '../../interfaces';\r\nimport { generateTimelines } from '../../utils';\r\nimport * as GIF from 'gif.js';\r\n\r\ninterface DotAnimationProps {\r\n  dot: Dot;\r\n  CardID: number;\r\n  type: 'Player' | 'Enemy';\r\n}\r\n\r\nconst DotAnimation: React.FC<DotAnimationProps> = ({ dot, CardID, type }) => {\r\n  const canvas = useRef<HTMLCanvasElement>();\r\n  // const tempCanvas = useRef<HTMLCanvasElement>();\r\n  const gif = useRef<any>();\r\n  useEffect(() => {\r\n    let top = 0;\r\n    let bottom = 65536;\r\n    let left = 0;\r\n    let right = 65536;\r\n    let canvasWidth = 0;\r\n    let canvasHeight = 0;\r\n    const tickNum: number = dot.Length;\r\n\r\n    const timelines = generateTimelines(dot);\r\n    if (timelines.length === 0) {\r\n      return;\r\n    }\r\n\r\n    timelines.forEach((timeline) => {\r\n      timeline.forEach((frame) => {\r\n        left = Math.max(left, frame.Sprite.ParsedX);\r\n        right = Math.min(\r\n          right,\r\n          frame.Sprite.ParsedX - frame.Sprite.Width * frame.Scale.X,\r\n        );\r\n\r\n        top = Math.max(top, frame.Sprite.ParsedY);\r\n        bottom = Math.min(\r\n          bottom,\r\n          frame.Sprite.ParsedY - frame.Sprite.Height * frame.Scale.Y,\r\n        );\r\n      });\r\n    });\r\n\r\n    canvasWidth = left - right;\r\n    canvasHeight = top - bottom;\r\n\r\n    canvas.current!.width = canvasWidth;\r\n    canvas.current!.height = canvasHeight;\r\n\r\n    // load image\r\n    const imageObj = new Image();\r\n    imageObj.crossOrigin = 'anonymous';\r\n    imageObj.src = `${\r\n      type === 'Player' ? PLAYER_DOT_URL : ENEMY_DOT_URL\r\n    }/${CardID}/sprite.png`;\r\n\r\n    const ctx = canvas.current!.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    let currentTick = 0;\r\n\r\n    gif.current = new GIF({\r\n      workers: 2,\r\n      quality: 1,\r\n      workerScript: '/gif.worker.js',\r\n      width: canvasWidth,\r\n      height: canvasHeight,\r\n      transparent: 'rgba(0,0,0,0)',\r\n    }).on('finished', (blob: Blob) => {\r\n      // crate a anchor\r\n      const url: string = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.style.display = 'none';\r\n      a.download = `${CardID}-${dot.Name}.gif`;\r\n      // and click it\r\n      a.click();\r\n    });\r\n\r\n    let gifStatus = true;\r\n    let frameId: number | undefined;\r\n    const imageLoop = () => {\r\n      // request next tick\r\n      if (timelines.length !== 0 && timelines[0].length !== 1)\r\n        frameId = window.requestAnimationFrame(imageLoop);\r\n\r\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n      timelines.forEach((timeline) => {\r\n        const frame = timeline[currentTick];\r\n        const sprite = frame.Sprite;\r\n        // set alpha\r\n        ctx.globalAlpha = frame.Alpha;\r\n        // draw image\r\n        ctx.drawImage(\r\n          imageObj,\r\n          sprite.X,\r\n          sprite.Y,\r\n          sprite.Width,\r\n          sprite.Height,\r\n          left - sprite.ParsedX,\r\n          top - sprite.ParsedY,\r\n          sprite.Width * frame.Scale.X,\r\n          sprite.Height * frame.Scale.Y,\r\n        );\r\n        // restore alpha\r\n        ctx.globalAlpha = 1;\r\n      });\r\n\r\n      if (gifStatus && currentTick % 2 === 0) {\r\n        gif.current!.addFrame(ctx, {\r\n          copy: true,\r\n          delay: 1000 / 30,\r\n        });\r\n      }\r\n\r\n      currentTick++;\r\n\r\n      if (currentTick > tickNum) {\r\n        currentTick = 0;\r\n        gifStatus = false;\r\n      }\r\n    };\r\n\r\n    imageObj.onload = imageLoop;\r\n\r\n    return () => {\r\n      const cv = canvas.current!;\r\n      const context = cv.getContext('2d')!;\r\n      context.clearRect(0, 0, cv.width, cv.height);\r\n      if (frameId) {\r\n        window.cancelAnimationFrame(frameId);\r\n      }\r\n      imageObj.onload = null;\r\n      gif.current = null;\r\n    };\r\n  }, [dot, CardID, type]);\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"点击下载gif\">\r\n        <canvas\r\n          ref={(ref) => ref && (canvas.current = ref)}\r\n          onClick={() => {\r\n            gif.current?.render();\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DotAnimation;\r\n","import React, { useState } from 'react';\r\nimport { Dot } from 'interfaces';\r\nimport DotAnimation from 'Components/DotAnimation';\r\nimport styles from './DotTable.module.less';\r\nimport { Button } from 'antd';\r\nimport { PLAYER_DOT_URL, ENEMY_DOT_URL } from 'consts';\r\n\r\nconst DotTable: React.FC<{\r\n  dot: Dot;\r\n  CardID: number;\r\n  type: 'Player' | 'Enemy';\r\n}> = ({ dot, CardID, type }) => {\r\n  const [showConfigs, setShowConfigs] = useState(false);\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        <tr>\r\n          <th colSpan={3}>{dot.Name}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td style={{ width: 100 }}>{dot.Length}f</td>\r\n          <td>\r\n            <DotAnimation type={type} dot={dot} CardID={CardID} />\r\n          </td>\r\n          <td style={{ width: 100 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              onClick={() => setShowConfigs(!showConfigs)}\r\n              icon={showConfigs ? 'up' : 'down'}\r\n            />\r\n          </td>\r\n        </tr>\r\n        {showConfigs && (\r\n          <tr>\r\n            <td colSpan={3}>\r\n              {dot.Entries.map((entry, entryIndex) => (\r\n                <div key={entryIndex}>\r\n                  {entry.Sprites.map((sprite, index) => {\r\n                    return (\r\n                      <div\r\n                        key={`${entryIndex}-${index}`}\r\n                        style={{\r\n                          display: 'inline-block',\r\n                          width: sprite.Width,\r\n                          height: sprite.Height,\r\n                          backgroundImage: `url(\"${\r\n                            type === 'Player' ? PLAYER_DOT_URL : ENEMY_DOT_URL\r\n                          }/${CardID}/sprite.png\")`,\r\n                          backgroundPositionX: -sprite.X,\r\n                          backgroundPositionY: -sprite.Y,\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DotTable;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Spin, Input, message } from 'antd';\r\nimport styles from './Unit.module.less';\r\n\r\nconst ConneNameInput: React.FC<{\r\n  ConneName: string;\r\n  CardID: number;\r\n  onCompleted?: () => any;\r\n}> = ({ ConneName, CardID, onCompleted }) => {\r\n  const [setCardMeta, { loading: setCardMetaLoading }] = useMutation<{\r\n    CardMeta: { ConneName?: string; NickNames?: string[] };\r\n  }>(\r\n    gql`\r\n      mutation($CardID: Int!, $ConneName: String, $NickNames: [String!]) {\r\n        CardMeta(\r\n          CardID: $CardID\r\n          ConneName: $ConneName\r\n          NickNames: $NickNames\r\n        ) {\r\n          ConneName\r\n          NickNames\r\n        }\r\n      }\r\n    `,\r\n    { onCompleted },\r\n  );\r\n  const [editing, setEditing] = useState(false);\r\n  const [value, setValue] = useState(ConneName);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setCardMeta({\r\n      variables: { CardID, ConneName: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return editing ? (\r\n    <Spin spinning={setCardMetaLoading}>\r\n      <Input\r\n        ref={ref}\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        onBlur={handleSave}\r\n        onPressEnter={handleSave}\r\n      />\r\n    </Spin>\r\n  ) : (\r\n    <div onClick={() => setEditing(true)} className={styles.fakeInput}>\r\n      {ConneName}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConneNameInput;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Spin, Select, message, Tag } from 'antd';\r\nimport styles from './Unit.module.less';\r\n\r\nconst NickNamesInput: React.FC<{\r\n  NickNames: string[];\r\n  CardID: number;\r\n  onCompleted?: () => any;\r\n}> = ({ NickNames, CardID, onCompleted }) => {\r\n  const [setCardMeta, { loading: setCardMetaLoading }] = useMutation<{\r\n    CardMeta: { ConneName?: string; NickNames?: string[] };\r\n  }>(\r\n    gql`\r\n      mutation($CardID: Int!, $ConneName: String, $NickNames: [String!]) {\r\n        CardMeta(\r\n          CardID: $CardID\r\n          ConneName: $ConneName\r\n          NickNames: $NickNames\r\n        ) {\r\n          ConneName\r\n          NickNames\r\n        }\r\n      }\r\n    `,\r\n    { onCompleted },\r\n  );\r\n  const [editing, setEditing] = useState(false);\r\n  const [value, setValue] = useState(NickNames || []);\r\n  const ref = useRef<Select<string[]>>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setCardMeta({\r\n      variables: { CardID, NickNames: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return editing ? (\r\n    <Spin spinning={setCardMetaLoading}>\r\n      <Select<string[]>\r\n        mode=\"tags\"\r\n        tokenSeparators={[',', ' ']}\r\n        ref={ref}\r\n        value={value}\r\n        onChange={v => setValue(v)}\r\n        onBlur={handleSave}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </Spin>\r\n  ) : (\r\n    <div onClick={() => setEditing(true)} className={styles.fakeInput}>\r\n      {NickNames &&\r\n        NickNames.map((name, index) => <Tag key={index}>{name}</Tag>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NickNamesInput;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './Unit.module.less';\r\nimport { UnitSpeciatyConfig } from 'interfaces';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Input, message, Spin } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nconst UnitSpecialtyRows: React.FC<{ config: UnitSpeciatyConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setUnitConfigMeta, { loading, data }] = useMutation<{\r\n    UnitConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation($TypeID: Int!, $Comment: String) {\r\n        UnitConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: d => {\r\n        setValue(d?.UnitConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setUnitConfigMeta({\r\n      variables: { TypeID: config.Type_Specialty, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.UnitConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.UnitConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n\r\n      <tr>\r\n        <td>{config.Type_Specialty}</td>\r\n        <td>{config.Value_Specialty}</td>\r\n        <td>{config.Value_Param1}</td>\r\n        <td>{config.Value_Param2}</td>\r\n        <td>{config.Value_Param3}</td>\r\n        <td>{config.Value_Param4}</td>\r\n      </tr>\r\n      {!!config.Command && (\r\n        <tr>\r\n          <td colSpan={6}>{config.Command}</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst UnitSpecialtyTable: React.FC<{ configs: UnitSpeciatyConfig[] }> = ({\r\n  configs,\r\n}) => {\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>类型</th>\r\n          <th>强度</th>\r\n          <th>p1</th>\r\n          <th>p2</th>\r\n          <th>p3</th>\r\n          <th>p4</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={6}>cmd</th>\r\n        </tr>\r\n      </thead>\r\n      {configs.map((config, index) => (\r\n        <UnitSpecialtyRows config={config} key={index} />\r\n      ))}\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UnitSpecialtyTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Icon, Tag, Radio, Row, Col } from 'antd';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport useRouter from 'use-react-router';\r\nimport {\r\n  ICO_URL,\r\n  BONUS_TYPE,\r\n  PLAYER_STAND_CG_URL,\r\n  PLAYER_HARLEM_CG_URL,\r\n} from 'consts';\r\nimport styles from './Unit.module.less';\r\nimport { Data, query } from './types';\r\nimport Rarity from 'Components/Rarity';\r\nimport Gender from 'Components/Gender';\r\nimport Loading from 'Components/Loading';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport classNames from 'classnames';\r\nimport SkillTable from 'Components/SkillTable';\r\nimport AbilityTable from 'Components/AbilityTable';\r\nimport ClassTable from 'Components/ClassTable';\r\nimport { Card, ClassData } from 'interfaces';\r\nimport DotTable from 'Components/DotTable';\r\nimport ConneNameInput from './ConneNameInput';\r\nimport NickNamesInput from './NickNamesInput';\r\nimport MediaContext from 'context/MediaContext';\r\nimport UnitSpecialtyTable from './UnitSpecialtyTable';\r\n\r\nfunction countMinMax(\r\n  min: number,\r\n  max: number,\r\n  maxLevel: number,\r\n  maxLevelUnit: number,\r\n  mod: number,\r\n) {\r\n  return [\r\n    Math.ceil((mod / 100) * (min + (max - min) * (1 / maxLevel))),\r\n    Math.ceil((mod / 100) * (min + (max - min) * (maxLevelUnit / maxLevel))),\r\n  ];\r\n}\r\n\r\nfunction classDataToUnit(\r\n  classData: ClassData,\r\n  card: Card,\r\n  nearRange?: { [k: string]: number },\r\n) {\r\n  let maxLevelUnit = 0;\r\n  const rarity = Number.parseInt(card.Rare, 10);\r\n  switch (classData.Type) {\r\n    case 'Evo2a':\r\n    case 'Evo2b':\r\n      maxLevelUnit = 99;\r\n      break;\r\n    case 'Evo':\r\n      if (rarity === 3) maxLevelUnit = 80;\r\n      if (rarity === 4) maxLevelUnit = 90;\r\n      if (rarity === 5) maxLevelUnit = 99;\r\n      if (rarity === 7) maxLevelUnit = 85;\r\n      if (rarity === 10) maxLevelUnit = 90;\r\n      if (rarity === 11) maxLevelUnit = 99;\r\n      break;\r\n    case 'Init':\r\n      if (rarity === 0) {\r\n        maxLevelUnit = 30;\r\n        break;\r\n      }\r\n      if (rarity === 1) {\r\n        maxLevelUnit = 40;\r\n        break;\r\n      }\r\n      if (\r\n        classData.Data_ExtraAwakeOrbs.length === 0 &&\r\n        classData.JobChange !== 0\r\n      ) {\r\n        maxLevelUnit = 50;\r\n        break;\r\n      }\r\n    // eslint-disable-next-line no-fallthrough\r\n    case 'CC':\r\n      if (rarity === 2) maxLevelUnit = 55;\r\n      if (rarity === 3) maxLevelUnit = 60;\r\n      if (rarity === 4) maxLevelUnit = 70;\r\n      if (rarity === 5) maxLevelUnit = classData.MaxLevel;\r\n      if (rarity === 7) maxLevelUnit = 65;\r\n      break;\r\n  }\r\n\r\n  return {\r\n    ...classData,\r\n    HP: countMinMax(\r\n      classData.InitHP,\r\n      classData.MaxHP,\r\n      classData.MaxLevel,\r\n      maxLevelUnit,\r\n      card.MaxHPMod,\r\n    ),\r\n    Atk: countMinMax(\r\n      classData.InitAtk,\r\n      classData.MaxAtk,\r\n      classData.MaxLevel,\r\n      maxLevelUnit,\r\n      card.AtkMod,\r\n    ),\r\n    Def: countMinMax(\r\n      classData.InitDef,\r\n      classData.MaxDef,\r\n      classData.MaxLevel,\r\n      maxLevelUnit,\r\n      card.DefMod,\r\n    ),\r\n    Cost: [\r\n      classData.Cost + Number.parseInt(card.CostModValue, 10),\r\n      classData.Cost +\r\n        Number.parseInt(card.CostModValue, 10) -\r\n        Number.parseInt(card.CostDecValue, 10),\r\n    ],\r\n    range:\r\n      nearRange && nearRange[classData.Type] !== 0\r\n        ? nearRange[classData.Type]\r\n        : classData.AtkArea,\r\n    maxLevelUnit,\r\n  };\r\n}\r\n\r\nconst getStatus = (card: Data['Card']) => {\r\n  const { BattleStyle } = card.Classes[0];\r\n  const ranges = BattleStyle && {\r\n    Init: BattleStyle._Range_01,\r\n    CC: BattleStyle._Range_02,\r\n    Evo: BattleStyle._Range_03,\r\n    Evo2a: BattleStyle._Range_04,\r\n    Evo2b: BattleStyle._Range_05,\r\n  };\r\n  // const rarity = card.Rare\r\n\r\n  const classes = [...card.Classes];\r\n\r\n  if (card._AwakePattern === 1 || card._AwakePattern === 2) {\r\n    const index = classes.findIndex(\r\n      (cl) => cl.Type === `Evo2${card._AwakePattern === 1 ? 'b' : 'a'}`,\r\n    );\r\n    if (classes.length >= 4) classes.splice(index, 1);\r\n  }\r\n\r\n  return classes.map((cl) => classDataToUnit(cl, card, ranges));\r\n};\r\n\r\nconst Unit: React.FC = () => {\r\n  const { match } = useRouter<{ CardID: string }>();\r\n  const CardID = Number.parseInt(match.params.CardID, 10);\r\n\r\n  const [currentImg, setCurrentImg] = useState('');\r\n  const [currentText, setCurrentText] = useState<number>();\r\n\r\n  const [avatars, setAvatars] = useState([0, 1, 2, 3]);\r\n\r\n  const { isTabletOrMobile } = MediaContext.useContainer();\r\n\r\n  const { loading, data, refetch } = useQuery<Data>(query, {\r\n    variables: { id: CardID },\r\n    fetchPolicy: 'network-only',\r\n  });\r\n\r\n  if (data) {\r\n    if (Number.parseInt(data.Card.Rare, 10) >= 10)\r\n      data.Card.Classes = data.Card.Classes.filter((cl) => cl.Type === 'Evo');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data?.Card.ImageStand?.[0]) {\r\n      setCurrentImg(data.Card.ImageStand[0]);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Loading spinning={loading}>\r\n        {data && !_.isEmpty(data) && (\r\n          <div>\r\n            <h1 className=\"unit-title\">\r\n              <Link to={`/quest/${CardID - 1}`}>\r\n                <Icon type=\"left\" />\r\n              </Link>\r\n\r\n              <Gender gender={data.Card.Kind} />\r\n              <div style={{ display: 'inline-block' }}>\r\n                <Rarity rare={Number.parseInt(data.Card.Rare)} />\r\n                <div>{data.Card.Name}</div>\r\n              </div>\r\n              <Link to={`/unit/${CardID + 1}`}>\r\n                <Icon type=\"right\" />\r\n              </Link>\r\n            </h1>\r\n            <p>\r\n              {data.Card.RaceName && (\r\n                <span>\r\n                  <Tag>{data.Card.RaceName}</Tag>\r\n                </span>\r\n              )}\r\n              {data.Card.AssignName && (\r\n                <span>\r\n                  <Tag color=\"magenta\">{data.Card.AssignName}</Tag>\r\n                </span>\r\n              )}\r\n              {data.Card.IdentityName && (\r\n                <span>\r\n                  <Tag color=\"black\">{data.Card.IdentityName}</Tag>\r\n                </span>\r\n              )}\r\n              {data.Card.GenusName && (\r\n                <span>\r\n                  <Tag color=\"blue\">{data.Card.GenusName}</Tag>\r\n                </span>\r\n              )}\r\n            </p>\r\n            <div className={styles.previewContainer}>\r\n              <div\r\n                className={classNames(styles.outerRadioContainer, {\r\n                  [styles.inset]: !isTabletOrMobile,\r\n                })}\r\n              >\r\n                <div className={styles.radioContainer}>\r\n                  <Radio.Group\r\n                    onChange={(e) => setCurrentImg(e.target.value)}\r\n                    value={currentImg}\r\n                    className={styles.radioGroup}\r\n                  >\r\n                    {data.Card.ImageStand.map((imgName, index) => (\r\n                      <Radio.Button key={imgName} value={imgName}>\r\n                        立绘\r\n                        {Number.parseInt(imgName[imgName.length - 5], 10) + 1}\r\n                      </Radio.Button>\r\n                    ))}\r\n                  </Radio.Group>\r\n                  <Radio.Group\r\n                    onChange={(e) => setCurrentImg(e.target.value)}\r\n                    value={currentImg}\r\n                    className={classNames(styles.radioGroup, styles.danger)}\r\n                  >\r\n                    {data.Card.ImageCG.map((imgName, index) => (\r\n                      <Radio.Button key={imgName} value={imgName}>\r\n                        CG{Number.parseInt(imgName[imgName.length - 5], 10) + 1}\r\n                      </Radio.Button>\r\n                    ))}\r\n                  </Radio.Group>\r\n                </div>\r\n                <div className={styles.radioContainer}>\r\n                  <Radio.Group\r\n                    onChange={(e) => setCurrentText(e.target.value)}\r\n                    value={currentText}\r\n                    className={styles.radioGroup}\r\n                  >\r\n                    {data.Card.HarlemTextA.map((_, index) => (\r\n                      <Radio.Button key={`a${index}`} value={index}>\r\n                        表{index + 1}\r\n                      </Radio.Button>\r\n                    ))}\r\n                  </Radio.Group>\r\n                  <Radio.Group\r\n                    onChange={(e) => setCurrentText(e.target.value)}\r\n                    value={currentText}\r\n                    className={classNames(styles.radioGroup, styles.danger)}\r\n                  >\r\n                    {data.Card.HarlemTextR.map((_, index) => (\r\n                      <Radio.Button key={`r${index}`} value={index + 10}>\r\n                        里{index + 1}\r\n                      </Radio.Button>\r\n                    ))}\r\n                  </Radio.Group>\r\n                </div>\r\n              </div>\r\n              <div className={styles.outerImageContainer}>\r\n                <div className={styles.imageContainer}>\r\n                  {currentText !== undefined && (\r\n                    <div\r\n                      className={classNames(styles.textContainer, {\r\n                        [styles.fullScreen]: isTabletOrMobile,\r\n                      })}\r\n                    >\r\n                      <Button\r\n                        ghost\r\n                        shape=\"circle\"\r\n                        onClick={() => setCurrentText(undefined)}\r\n                        className={styles.closeButton}\r\n                      >\r\n                        <Icon type=\"close\" />\r\n                      </Button>\r\n                      <div\r\n                        className={styles.text}\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: (currentText < 10\r\n                            ? data.Card.HarlemTextA[currentText]\r\n                            : data.Card.HarlemTextR[currentText - 10]\r\n                          )\r\n                            .replace(\r\n                              /([＠@].*\\r?\\n)/g,\r\n                              (match, p1) =>\r\n                                `<span style=\"font-weight: bold\">${p1}</span>`,\r\n                            )\r\n                            .replace(/\\r?\\n/g, '<br />'),\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <img\r\n                    style={{ height: '100%' }}\r\n                    src={\r\n                      currentImg.includes('card')\r\n                        ? `${PLAYER_STAND_CG_URL}/${currentImg}`\r\n                        : `${PLAYER_HARLEM_CG_URL}/${currentImg}`\r\n                    }\r\n                    alt={currentImg.toString()}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <table className={styles.table}>\r\n              <tbody>\r\n                <tr>\r\n                  <th>大头贴</th>\r\n                  <td colSpan={5}>\r\n                    {avatars.map((avatar) => (\r\n                      <img\r\n                        key={avatar}\r\n                        src={`${ICO_URL}/${avatar}/${CardID}.png`}\r\n                        alt={`${CardID}-${avatar}`}\r\n                        onError={() => {\r\n                          const index = avatars.findIndex((a) => a === avatar);\r\n                          setAvatars([\r\n                            ...avatars.slice(0, index),\r\n                            ...avatars.slice(index + 1),\r\n                          ]);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>画师</th>\r\n                  <td colSpan={5}>{data.Card.IllustName}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>昵称</th>\r\n                  <td colSpan={5}>\r\n                    <NickNamesInput\r\n                      NickNames={data.Card.NickNames}\r\n                      CardID={CardID}\r\n                      onCompleted={refetch}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>圆爹名</th>\r\n                  <td colSpan={5}>\r\n                    <ConneNameInput\r\n                      ConneName={data.Card.ConneName}\r\n                      CardID={CardID}\r\n                      onCompleted={refetch}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>手料理</th>\r\n                  <td colSpan={5}>{data.Card.HomeCooking}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>金币</th>\r\n                  <td colSpan={2}>{data.Card.SellPrice}</td>\r\n                  <th>虹水晶</th>\r\n                  <td colSpan={2}>{data.Card._TradePoint}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>魔抗</th>\r\n                  <td colSpan={5}>{data.Card.MagicResistance}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>HP补正</th>\r\n                  <td>{data.Card.MaxHPMod / 100}</td>\r\n                  <th>Atk补正</th>\r\n                  <td>{data.Card.AtkMod / 100}</td>\r\n                  <th>Def补正</th>\r\n                  <td>{data.Card.DefMod / 100}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>好感1</th>\r\n                  <td>\r\n                    {data.Card.BonusType !== 0 &&\r\n                      BONUS_TYPE.get(data.Card.BonusType).replace(\r\n                        '%d',\r\n                        Math.ceil(data.Card.BonusNum * 1.2),\r\n                      )}\r\n                  </td>\r\n                  <th>好感2</th>\r\n                  <td>\r\n                    {data.Card.BonusType2 !== 0 &&\r\n                      BONUS_TYPE.get(data.Card.BonusType2).replace(\r\n                        '%d',\r\n                        Math.ceil(data.Card.BonusNum2 * 1.2),\r\n                      )}\r\n                  </td>\r\n                  <th>好感150</th>\r\n                  <td>\r\n                    {data.Card.BonusType3 !== 0 &&\r\n                      BONUS_TYPE.get(data.Card.BonusType3).replace(\r\n                        '%d',\r\n                        Math.ceil(data.Card.BonusNum3),\r\n                      )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <table className={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th>职业名</th>\r\n                  <th>等级</th>\r\n                  <th>HP</th>\r\n                  <th>攻击</th>\r\n                  <th>防御</th>\r\n                  <th>射程</th>\r\n                  <th>档数</th>\r\n                  <th>Cost</th>\r\n                </tr>\r\n              </thead>\r\n              <thead>\r\n                {getStatus(data.Card).map((st, index) => (\r\n                  <React.Fragment key={st.ClassID}>\r\n                    <tr>\r\n                      <td rowSpan={2}>\r\n                        {st.Type === 'Evo2a' && (\r\n                          <span style={{ color: '#1890ff' }}>(A) </span>\r\n                        )}\r\n                        {st.Type === 'Evo2b' && (\r\n                          <span style={{ color: '#52c41a' }}>(B) </span>\r\n                        )}\r\n                        {st.Name}\r\n                      </td>\r\n                      <td>1</td>\r\n                      <td>{st.HP[0]}</td>\r\n                      <td>{st.Atk[0]}</td>\r\n                      <td>{st.Def[0]}</td>\r\n                      <td rowSpan={2}>{st.range}</td>\r\n                      <td rowSpan={2}>{st.BlockNum}</td>\r\n                      <td rowSpan={2}>\r\n                        {st.Cost[0]}/{st.Cost[1]}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{st.maxLevelUnit}</td>\r\n                      <td>{st.HP[1]}</td>\r\n                      <td>{st.Atk[1]}</td>\r\n                      <td>{st.Def[1]}</td>\r\n                    </tr>\r\n                  </React.Fragment>\r\n                ))}\r\n              </thead>\r\n            </table>\r\n\r\n            <div>\r\n              <h2>技能</h2>\r\n              {data.Card.Skills.map((skillWithType, index) => (\r\n                <SkillTable\r\n                  skills={skillWithType.Skills}\r\n                  type={skillWithType.Type}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <div>\r\n              <h2>被动</h2>\r\n              {_.uniqBy(data.Card.Abilities, 'AbilityID').map((ability) => (\r\n                <AbilityTable key={ability.AbilityID} ability={ability} />\r\n              ))}\r\n            </div>\r\n\r\n            {data.Card.SpecialtyConfigs.length > 0 && (\r\n              <div>\r\n                <h2>单位设置</h2>\r\n                <UnitSpecialtyTable configs={data.Card.SpecialtyConfigs} />\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              <h2>职业</h2>\r\n              {data.Card.Classes.map((cl) => (\r\n                <ClassTable\r\n                  classData={cl}\r\n                  key={cl.ClassID}\r\n                  onCompleted={refetch}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {data.Card.Dots && (\r\n              <div>\r\n                <h2>点阵</h2>\r\n                <Row gutter={8}>\r\n                  {data.Card.Dots.map((dot, index) => (\r\n                    <Col key={index} sm={24} md={12}>\r\n                      <DotTable\r\n                        dot={dot}\r\n                        CardID={data.Card.CardID}\r\n                        type=\"Player\"\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Loading>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Unit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Input, Row, Col, Icon, Drawer, Tag } from 'antd';\r\nimport { FixedSizeList as List } from 'react-window';\r\nimport gql from 'graphql-tag';\r\nimport useRouter from 'use-react-router';\r\nimport classNames from 'classnames';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Card } from './types';\r\nimport UnitListCard from './UnitListCard';\r\nimport styles from './UnitList.module.less';\r\nimport Unit from '../Unit';\r\nimport Loading from '../../Loading';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Data {\r\n  Cards: Card[];\r\n}\r\n\r\ninterface Props {\r\n  data?: Data;\r\n  loading: boolean;\r\n}\r\n\r\nconst FILTER_TYPE: { [k: string]: string } = {\r\n  Rare: '稀有',\r\n  RaceName: '种族',\r\n  AssignName: '出身',\r\n  GenusName: '限定',\r\n  IdentityName: '属性',\r\n  IllustName: '画师',\r\n  'Classes.0.Name': '职业',\r\n};\r\n\r\nconst UnitList: React.FC<Props> = ({ data, loading }) => {\r\n  const [sorter, setSorter] = useState({ key: 'CardID', order: true });\r\n  const [search, setSearch] = useState('');\r\n  const [filters, setFilters] = useState<\r\n    Array<{ content: string; type: string }>\r\n  >([]);\r\n\r\n  // 两个变量react-window用\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n  const [scrolled, setScrolled] = useState(0);\r\n\r\n  const { match, history } = useRouter<{ CardID: string }>();\r\n  const { CardID } = match.params;\r\n\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\r\n\r\n  useEffect(() => {\r\n    const main = document.getElementsByTagName('main')[0];\r\n    const handleResize = () => {\r\n      const width = main.offsetWidth - 60;\r\n      const height = main.offsetHeight - 150;\r\n      setSize({ width, height });\r\n    };\r\n    window.onresize = handleResize;\r\n    handleResize();\r\n    return () => {\r\n      window.onresize = null;\r\n    };\r\n  }, []);\r\n\r\n  // 生成表头\r\n  const genSorter = (title: string, key: string) => {\r\n    return (\r\n      <div\r\n        style={{ cursor: 'pointer' }}\r\n        onClick={() =>\r\n          setSorter({ key, order: key === sorter.key ? !sorter.order : true })\r\n        }\r\n      >\r\n        {title}\r\n        {sorter.key === key && (\r\n          <Icon type={sorter.order ? 'caret-down' : 'caret-up'} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getParam = (target: any, keys: string) => {\r\n    keys.split('.').forEach((st: string) => (target = target[st]));\r\n    return target;\r\n  };\r\n\r\n  const cardSorter = (cardA: any, cardB: any) => {\r\n    const { key, order } = sorter;\r\n    const paramA = getParam(cardA, key);\r\n    const paramB = getParam(cardB, key);\r\n    if (typeof paramA === 'number') {\r\n      return order ? paramA - paramB : paramB - paramA;\r\n    } else {\r\n      if (paramA > paramB) {\r\n        return order ? 1 : -1;\r\n      } else if (paramA < paramB) {\r\n        return order ? -1 : 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const cardFilter = (card: any) => {\r\n    let flag = JSON.stringify(card).includes(search);\r\n\r\n    filters.forEach((filter) => {\r\n      const { type, content } = filter;\r\n      const sourceValue = getParam(card, type);\r\n      let parsedValue: number | string = content;\r\n      if (typeof sourceValue === 'number') {\r\n        parsedValue = Number.parseInt(parsedValue, 10);\r\n      }\r\n      flag = flag && sourceValue === parsedValue;\r\n    });\r\n    return flag;\r\n  };\r\n\r\n  const handleSetFilter = (content: string, type: string) => {\r\n    const filter = filters.find(\r\n      (f) => f.content === content && f.type === type,\r\n    );\r\n    if (!filter) {\r\n      setFilters((fs) => [...fs, { content, type }]);\r\n    }\r\n  };\r\n\r\n  const showUnit = (cardID: string) => {\r\n    history.push({\r\n      pathname: `/unit/${cardID}`,\r\n      state: { modal: true },\r\n    });\r\n  };\r\n\r\n  const cards =\r\n    (data &&\r\n      data.Cards &&\r\n      data.Cards.slice()\r\n        .map((card) => ({\r\n          ...card,\r\n          CardID: Number.parseInt(card.CardID, 10),\r\n        }))\r\n        .sort(cardSorter)\r\n        .filter(cardFilter)) ||\r\n    [];\r\n\r\n  return (\r\n    <Content className={styles.unitListContent}>\r\n      <Input\r\n        placeholder=\"搜索单位\"\r\n        value={search}\r\n        onChange={(event) => setSearch(event.target.value)}\r\n      />\r\n      <div className={styles.filterContainer}>\r\n        {filters.map((filter, index) => {\r\n          return (\r\n            <Tag\r\n              key={index + filter.content}\r\n              closable\r\n              onClose={() => {\r\n                const i = filters.findIndex(\r\n                  (f) => f.content === filter.content && f.type === filter.type,\r\n                );\r\n                setFilters([...filters.slice(0, i), ...filters.slice(i + 1)]);\r\n              }}\r\n            >\r\n              {FILTER_TYPE[filter.type]}：{filter.content}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </div>\r\n      <Row\r\n        className={classNames(styles.sorterBlock, {\r\n          [styles.shadow]: scrolled !== 0,\r\n        })}\r\n      >\r\n        <Col md={4} xs={8}>\r\n          {genSorter('#', 'CardID')}\r\n        </Col>\r\n        <Col md={4} xs={16}>\r\n          {genSorter('名称', 'Name')}\r\n        </Col>\r\n        <Col lg={6} xs={0}>\r\n          {genSorter('种族', 'Race')}\r\n        </Col>\r\n        <Col lg={5} md={8} xs={0}>\r\n          {genSorter('职业', 'Class[0].Name')}\r\n        </Col>\r\n        <Col lg={5} md={8} xs={0}>\r\n          {genSorter('画师', 'Illust')}\r\n        </Col>\r\n      </Row>\r\n      <div className={styles.listContainer}>\r\n        {!loading ? (\r\n          <List\r\n            height={size.height}\r\n            itemCount={cards.length}\r\n            itemSize={68}\r\n            width={size.width}\r\n            onScroll={({ scrollOffset }) => setScrolled(scrollOffset)}\r\n          >\r\n            {({ index, style }) => (\r\n              <div key={cards[index].CardID} style={style}>\r\n                <UnitListCard\r\n                  card={{\r\n                    ...cards[index],\r\n                    CardID: String(cards[index].CardID),\r\n                  }}\r\n                  showUnit={showUnit}\r\n                  setFilter={handleSetFilter}\r\n                />\r\n              </div>\r\n            )}\r\n          </List>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </div>\r\n      <Drawer\r\n        width={isTabletOrMobile ? '100%' : '80%'}\r\n        visible={!!CardID}\r\n        destroyOnClose\r\n        onClose={() => history.push('/unit')}\r\n        getContainer={false}\r\n        style={{ position: 'absolute' }}\r\n      >\r\n        {CardID && <Unit />}\r\n      </Drawer>\r\n    </Content>\r\n  );\r\n};\r\n\r\nconst UnitListWrapper: React.FC = (props) => {\r\n  const { data, loading } = useQuery(\r\n    gql`\r\n      query {\r\n        Cards {\r\n          CardID\r\n          Name\r\n          Rare\r\n          Kind\r\n          IllustName\r\n          RaceName\r\n          AssignName\r\n          IdentityName\r\n          GenusName\r\n          NickNames\r\n          Classes {\r\n            Name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  );\r\n  return <UnitList {...props} data={data} loading={loading} />;\r\n};\r\n\r\nexport default UnitListWrapper;\r\n","export const MISSION_TYPE: { [k: string]: string } = {\r\n  Assault: '投票讨伐',\r\n  Story: '主线',\r\n  Emergency: '紧急',\r\n  Reproduce: '复刻',\r\n  DailyReproduce: '每日复刻',\r\n  Subjugation: '大讨伐',\r\n  DevilAdvent: '魔神',\r\n  Harlem: '交流',\r\n  Daily: '曜日',\r\n  Challenge: '挑战',\r\n  Tutorial: '教程',\r\n  Tower: '英杰之塔',\r\n  Raid: '神兽',\r\n};\r\n\r\nexport interface QuestData {\r\n  Name: string;\r\n  QuestID: number;\r\n  Charisma: number;\r\n  ActionPoint: number;\r\n}\r\n","import React from 'react';\r\nimport { Spin, Tag } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { QuestData } from './types';\r\nimport useRouter from 'use-react-router';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport styles from './QuestList.module.less';\r\n\r\nconst MissionShutter: React.FC<{ mission: any; isTabletOrMobile: boolean }> = ({\r\n  mission,\r\n  isTabletOrMobile,\r\n}) => {\r\n  const { history } = useRouter();\r\n\r\n  const showQuest = (questID: number) => {\r\n    history.push(`/quest/${questID}`);\r\n  };\r\n\r\n  const { loading, data } = useQuery<{ Mission: { Quests: QuestData[] } }>(\r\n    gql`\r\n      query($MissionID: Int!) {\r\n        Mission(MissionID: $MissionID) {\r\n          Quests {\r\n            Name\r\n            QuestID\r\n            Charisma\r\n            ActionPoint\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { variables: { MissionID: mission.MissionID } },\r\n  );\r\n  return loading ? (\r\n    <Spin />\r\n  ) : data!.Mission.Quests.length === 0 ? (\r\n    <div>该战役下没有关卡。</div>\r\n  ) : (\r\n    <div>\r\n      {data!.Mission.Quests.map(quest => (\r\n        <div\r\n          key={quest.QuestID}\r\n          className={styles.listCard}\r\n          onClick={showQuest.bind(null, quest.QuestID)}\r\n        >\r\n          <span>{quest.QuestID}</span>\r\n          &nbsp;\r\n          <strong>{quest.Name}</strong>\r\n          <div\r\n            style={{\r\n              display: isTabletOrMobile ? 'block' : 'inline-block',\r\n              float: isTabletOrMobile ? 'none' : 'right',\r\n            }}\r\n          >\r\n            {quest.Charisma !== 0 && <Tag color=\"green\">{quest.Charisma}</Tag>}\r\n            {quest.ActionPoint !== 0 && (\r\n              <Tag color=\"red\">{quest.ActionPoint}</Tag>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionShutter;\r\n","import React from 'react';\r\nimport { ICO_URL, BATTLE_TALK_EVENT_URL } from 'consts';\r\nimport { renderDescription } from 'utils';\r\n\r\nconst TalkRow: React.FC<{\r\n  talk: { Name: string; FaceID: number; Message: string };\r\n  MissionID: number;\r\n  isTabletOrMobile: boolean;\r\n}> = ({ talk, MissionID, isTabletOrMobile }) => {\r\n  return (\r\n    <tr>\r\n      <th>\r\n        {talk.Name}\r\n        <img\r\n          style={{\r\n            display: 'block',\r\n            margin: 'auto',\r\n            width: '100%',\r\n          }}\r\n          alt={talk.FaceID.toString()}\r\n          src={\r\n            talk.FaceID >= 2000\r\n              ? `${ICO_URL}/0/${talk.FaceID - 2000}.png`\r\n              : talk.FaceID >= 1000\r\n              ? `${ICO_URL}/0/${talk.FaceID - 1000}.png`\r\n              : `${BATTLE_TALK_EVENT_URL}/${MissionID}/${talk.FaceID}.png`\r\n          }\r\n        />\r\n      </th>\r\n      <td colSpan={9}>\r\n        <div\r\n          dangerouslySetInnerHTML={{\r\n            __html: renderDescription(talk.Message),\r\n          }}\r\n          style={{\r\n            margin: 'auto',\r\n            textAlign: 'left',\r\n            maxWidth: '30em',\r\n          }}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TalkRow;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button, Divider, Row, Col, Switch, Input, message, Spin } from 'antd';\r\nimport { ICO_URL, ENEMY_DOT_URL, ENEMY_CHANGE_COND } from 'consts';\r\nimport styles from './Quest.module.less';\r\nimport {\r\n  Dot,\r\n  Enemy,\r\n  MapEntry,\r\n  EnemySpecialtyConfig,\r\n  MapRoute,\r\n} from 'interfaces';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport DotTable from 'Components/DotTable';\r\nimport TalkRow from 'Components/TalkRow';\r\nimport { Quest as QuestType } from 'interfaces';\r\nimport MissileTable from 'Components/MissileTable';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport classNames from 'classnames';\r\n\r\nconst getAttackSpeed = (enemy: Enemy & MapEntry, dots: Dot[]) => {\r\n  let length = 0;\r\n  for (const dot of dots) {\r\n    if (dot.Name === 'Attack') {\r\n      length = dot.Length;\r\n    }\r\n  }\r\n  // don't know why\r\n  if (!length) {\r\n    return null;\r\n  }\r\n  let attackSpeed = enemy.AttackWait * 2 + length;\r\n  if (!enemy.ATTACK_RANGE) {\r\n    attackSpeed += enemy.ATTACK_SPEED;\r\n  }\r\n  return attackSpeed;\r\n};\r\n\r\nconst EnemyConfigTableRows: React.FC<{ config: EnemySpecialtyConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setEnemyConfigMeta, { loading, data }] = useMutation<{\r\n    EnemyConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation ($TypeID: Int!, $Comment: String) {\r\n        EnemyConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: (d) => {\r\n        setValue(d?.EnemyConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setEnemyConfigMeta({\r\n      variables: { TypeID: config.Type_Influence, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.EnemyConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.EnemyConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n\r\n      <tr>\r\n        <td>{config.Type_Influence}</td>\r\n        <td>{config.Param_1}</td>\r\n        <td>{config.Param_2}</td>\r\n        <td>{config.Param_3}</td>\r\n        <td>{config.Param_4}</td>\r\n      </tr>\r\n\r\n      {!!(config._Expression || config._ExtParam) && (\r\n        <tr>\r\n          <td colSpan={3}>{config._Expression}</td>\r\n          <td colSpan={2}>{config._ExtParam}</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\ninterface EnemyTableRowsProps {\r\n  enemies: Array<Enemy & MapEntry>;\r\n  drops: string[];\r\n  isTabletOrMobile: boolean;\r\n  routes: MapRoute[][];\r\n}\r\n\r\n// enemy group (with change)\r\nconst EnemyTableRows: React.FC<EnemyTableRowsProps> = ({\r\n  enemies,\r\n  drops,\r\n  isTabletOrMobile,\r\n  routes,\r\n}) => {\r\n  const [expand, setExpand] = useState(false);\r\n  const [showTable, setShowTable] = useState<boolean[]>(\r\n    Array(enemies.length).fill(false),\r\n  );\r\n\r\n  const routeNos = [enemies[0].RouteNo];\r\n  let f = false;\r\n  for (let i = 0; i < routeNos.length; i++) {\r\n    const routeNo = routeNos[i];\r\n    for (const route of routes[routeNo]) {\r\n      // 循环route\r\n      if (route.RouteID !== 0 && (!routeNos.includes(route.RouteID) || !f)) {\r\n        if (routeNos.includes(route.RouteID)) {\r\n          f = true;\r\n        }\r\n        routeNos.push(route.RouteID);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {enemies.slice(0, expand ? enemies.length : 1).map((e, index) => {\r\n        const dots = e.Dots;\r\n        const previewSprite = dots?.[0].Entries[0].Sprites[0];\r\n        const types = [\r\n          e.SkyFlag && '飛行',\r\n          e.EnemyElem._EnemyElementName,\r\n          e.EnemyType._EnemyTypeName,\r\n          e._Attribute,\r\n        ]\r\n          .filter((st) => st && st !== 'なし')\r\n          .join(' ');\r\n        const changeCondition = e.Param_ChangeParam\r\n          ? ENEMY_CHANGE_COND[e.Param_ChangeCondition]\r\n          : null;\r\n        const imgID = (e.PatternID >> 8) % 4096;\r\n        const dropImg =\r\n          e.PrizeCardID !== 0 ? (\r\n            <img\r\n              src={drops[e.PrizeCardID - 1]}\r\n              alt={e.PrizeCardID.toString()}\r\n              style={{ width: 40 }}\r\n            />\r\n          ) : null;\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <tr\r\n              className={styles.compact}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() =>\r\n                setShowTable((st) =>\r\n                  st.map((v, i) => {\r\n                    if (i === index) return !v;\r\n                    return v;\r\n                  }),\r\n                )\r\n              }\r\n            >\r\n              <td style={{ textAlign: 'left' }}>\r\n                {enemies.length > 1 && index === 0 && (\r\n                  <Button\r\n                    icon={expand ? 'minus' : 'plus'}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      setExpand((e) => !e);\r\n                    }}\r\n                    style={{\r\n                      width: 20,\r\n                      height: 20,\r\n                      fontSize: 10,\r\n                      marginRight: 5,\r\n                    }}\r\n                  />\r\n                )}\r\n                {enemies.length > 1 && index !== 0 && (\r\n                  <Divider style={{ margin: '0 12.5px' }} type=\"vertical\" />\r\n                )}\r\n                {previewSprite && (\r\n                  <div\r\n                    style={{\r\n                      display: 'inline-block',\r\n                      width: previewSprite.Width,\r\n                      height: previewSprite.Height,\r\n                      backgroundImage: `url(\"${ENEMY_DOT_URL}/${imgID}/sprite.png\")`,\r\n                      backgroundPositionX: -previewSprite.X,\r\n                      backgroundPositionY: -previewSprite.Y,\r\n                      zoom: Math.min(\r\n                        40 / previewSprite.Height,\r\n                        40 / previewSprite.Width,\r\n                      ),\r\n                      verticalAlign: 'middle',\r\n                    }}\r\n                  />\r\n                )}\r\n              </td>\r\n              {!isTabletOrMobile && <td>{types}</td>}\r\n              <td>\r\n                {dots && getAttackSpeed(e, dots)}\r\n                <br />\r\n                {Math.ceil((e.ATTACK_RANGE * e.DotRate) / 1.5)}\r\n              </td>\r\n              <td>{e.HP}</td>\r\n              <td\r\n                style={{\r\n                  background:\r\n                    e.TypeAttack === 300\r\n                      ? '#ffdad2'\r\n                      : e.MagicAttack\r\n                      ? '#c8f1bb'\r\n                      : '#ccecff',\r\n                }}\r\n              >\r\n                {e.ATTACK_POWER}\r\n              </td>\r\n              <td>\r\n                {e.ARMOR_DEFENSE}\r\n                <br />\r\n                {e.MAGIC_DEFENSE}\r\n              </td>\r\n              <td>{e.Param_ResistanceAssassin}</td>\r\n              {!isTabletOrMobile && <td>{dropImg}</td>}\r\n              {!isTabletOrMobile && <td>{changeCondition}</td>}\r\n            </tr>\r\n            {showTable[index] && (\r\n              <tr>\r\n                <td colSpan={9} style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n                  <Row gutter={8}>\r\n                    <Col xs={24} md={12}>\r\n                      <table className={styles.table}>\r\n                        <tbody>\r\n                          <tr>\r\n                            <th>类型</th>\r\n                            <td>{types}</td>\r\n                          </tr>\r\n                          {changeCondition && (\r\n                            <tr>\r\n                              <th>切换条件</th>\r\n                              <td>{changeCondition}</td>\r\n                            </tr>\r\n                          )}\r\n                          <tr>\r\n                            <th>循环数量</th>\r\n                            <td>{e.Loop}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>路线</th>\r\n                            <td>{routeNos.join('->')}</td>\r\n                          </tr>\r\n                          {e.PrizeCardID !== 0 && (\r\n                            <tr>\r\n                              <th>掉落</th>\r\n                              <td>{dropImg}</td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n\r\n                      {e.SpecialtyConfigs.length > 0 && (\r\n                        <table\r\n                          className={styles.table}\r\n                          style={{\r\n                            tableLayout: 'fixed',\r\n                            position: 'relative',\r\n                          }}\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              <th>类型</th>\r\n                              <th>p1</th>\r\n                              <th>p2</th>\r\n                              <th>p3</th>\r\n                              <th>p4</th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th colSpan={3}>cmd</th>\r\n                              <th colSpan={2}>...p</th>\r\n                            </tr>\r\n                          </thead>\r\n                          {e.SpecialtyConfigs.map((config, index) => (\r\n                            <EnemyConfigTableRows key={index} config={config} />\r\n                          ))}\r\n                        </table>\r\n                      )}\r\n                      {!!(e.Missile && e.Missile.Enemy === 1) && (\r\n                        <MissileTable missile={e.Missile} compact />\r\n                      )}\r\n                    </Col>\r\n                    <Col xs={24} md={12}>\r\n                      {dots &&\r\n                        dots.map((dot, i) => (\r\n                          <DotTable\r\n                            key={i}\r\n                            CardID={imgID}\r\n                            type=\"Enemy\"\r\n                            dot={dot}\r\n                          />\r\n                        ))}\r\n                    </Col>\r\n                  </Row>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface EnemyTableProps {\r\n  data: {\r\n    Quest: QuestType;\r\n    QuestEventTexts: Array<{\r\n      Message: string;\r\n      Name: string;\r\n      FaceID: number;\r\n    }>;\r\n  };\r\n}\r\n\r\nconst EnemyTable: React.FC<EnemyTableProps> = ({ data }) => {\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\r\n  const { Quest: quest } = data;\r\n  const enemies = quest.Map.Enemies;\r\n  const entries = quest.Map.Entries[quest.EntryNo];\r\n  const routes = quest.Map.Routes;\r\n  const mapLevel = quest.Level;\r\n  const [showDuplicate, setShowDuplicate] = useState(false);\r\n  const [showTalk, setShowTalk] = useState(true);\r\n  const drops = [\r\n    quest.Treasure1,\r\n    quest.Treasure2,\r\n    quest.Treasure3,\r\n    quest.Treasure4,\r\n    quest.Treasure5,\r\n  ].map(\r\n    (treasure) =>\r\n      `${ICO_URL}/0/${\r\n        (treasure >= 1000 && treasure < 2000 ? '_' : '') + treasure\r\n      }.png`,\r\n  );\r\n  const parsedEnemies: Array<Array<Enemy & MapEntry> | MapEntry> = [];\r\n  const parseEnemy = (entry: MapEntry, enemyID: number = entry.EnemyID - 1) => {\r\n    const enemy = { ...enemies[enemyID], ...entry, EnemyID: enemyID };\r\n    if (!enemy.Level) {\r\n      enemy.Level = 100;\r\n    }\r\n    enemy.HP = (enemy.HP * mapLevel * enemy.Level) / 10000;\r\n    if (!enemy.ATTACK_RANGE) {\r\n      enemy.ATTACK_POWER =\r\n        (enemy.ATTACK_POWER * mapLevel * enemy.Level) / 10000;\r\n    }\r\n    return enemy;\r\n  };\r\n  for (const entry of entries) {\r\n    // ids between 0 and 1000 are true enemies\r\n    if (entry.EnemyID >= 0 && entry.EnemyID < 1000) {\r\n      const enemy = parseEnemy(entry);\r\n      const enemyGroup = [enemy];\r\n      if (\r\n        parsedEnemies.find(\r\n          (ea) =>\r\n            !showDuplicate &&\r\n            ea instanceof Array &&\r\n            ea[0].EnemyID === enemy.EnemyID,\r\n        )\r\n      ) {\r\n        continue;\r\n      }\r\n      if (enemy.Param_ChangeParam) {\r\n        while (enemyGroup[enemyGroup.length - 1].Param_ChangeParam) {\r\n          const changeFrom = enemyGroup[enemyGroup.length - 1];\r\n          const enemyID = changeFrom.Param_ChangeParam - 1;\r\n          if (enemyGroup.find((e) => e.EnemyID === enemyID)) {\r\n            break;\r\n          }\r\n          const newEnemy = parseEnemy(entry, enemyID);\r\n          enemyGroup.push(newEnemy);\r\n        }\r\n      }\r\n      parsedEnemies.push(enemyGroup);\r\n    } else {\r\n      parsedEnemies.push(entry);\r\n    }\r\n  }\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        <tr>\r\n          <td colSpan={12}>\r\n            重复敌人\r\n            <Switch\r\n              checkedChildren=\"显示\"\r\n              unCheckedChildren=\"隐藏\"\r\n              checked={showDuplicate}\r\n              onChange={(value) => setShowDuplicate(value)}\r\n            />\r\n            <Divider type=\"vertical\" />\r\n            对话\r\n            <Switch\r\n              checkedChildren=\"显示\"\r\n              unCheckedChildren=\"隐藏\"\r\n              checked={showTalk}\r\n              onChange={(value) => setShowTalk(value)}\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th rowSpan={2} style={{ width: 100 }}>\r\n            点阵\r\n          </th>\r\n          {!isTabletOrMobile && <th rowSpan={2}>属性</th>}\r\n          <th>攻速</th>\r\n          <th rowSpan={2}>HP</th>\r\n          <th rowSpan={2}>攻击</th>\r\n          <th>防御</th>\r\n          <th rowSpan={2}>暗杀</th>\r\n          {!isTabletOrMobile && <th rowSpan={2}>掉落</th>}\r\n          {!isTabletOrMobile && <th rowSpan={2}>切换</th>}\r\n        </tr>\r\n        <tr>\r\n          <th>射程</th>\r\n          <th>魔抗</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {parsedEnemies.map((enemies, index) => {\r\n          if (enemies instanceof Array) {\r\n            return (\r\n              <EnemyTableRows\r\n                isTabletOrMobile={isTabletOrMobile}\r\n                enemies={enemies}\r\n                drops={drops}\r\n                key={index}\r\n                routes={routes}\r\n              />\r\n            );\r\n          } else if (enemies.EnemyID === -1) {\r\n            // wait\r\n            return null;\r\n          } else if (enemies.EnemyID === 2000) {\r\n            // exclution mark\r\n            return null;\r\n          } else if (enemies.EnemyID >= 1000 && enemies.EnemyID < 2000) {\r\n            // quest event text\r\n            return showTalk ? (\r\n              <TalkRow\r\n                key={`enemy-table-${index}`}\r\n                talk={data.QuestEventTexts[enemies.EnemyID - 1000]}\r\n                MissionID={quest.Mission.MissionID}\r\n                isTabletOrMobile={isTabletOrMobile}\r\n              />\r\n            ) : null;\r\n          } else if (enemies.EnemyID === 4201) {\r\n            // command, play se or call a event, etc\r\n            const command = enemies.EntryCommand;\r\n            const match = /CallEvent\\(([\\d,]+)\\)/.exec(command);\r\n            if (match) {\r\n              const list = match[1].split(',');\r\n              return list.map((s, index) => {\r\n                const recordIndex = Number.parseInt(s, 10);\r\n                const talk = quest.Mission.BattleTalkEvents.find(\r\n                  (e) => e.RecordIndex === recordIndex,\r\n                );\r\n                if (!talk) {\r\n                  return null;\r\n                }\r\n                return showTalk ? (\r\n                  <TalkRow\r\n                    key={`enemy-table-${index}-event-${recordIndex}`}\r\n                    MissionID={quest.Mission.MissionID}\r\n                    talk={talk}\r\n                    isTabletOrMobile={isTabletOrMobile}\r\n                  />\r\n                ) : null;\r\n              });\r\n            }\r\n            return (\r\n              <tr style={{ display: 'none' }} key={`enemy-table-${index}`}>\r\n                <td colSpan={14}>{enemies.EntryCommand}</td>\r\n              </tr>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default EnemyTable;\r\n","import React from 'react';\r\nimport { Enemy } from 'interfaces';\r\nimport { ENEMY_DOT_URL } from 'consts';\r\n\r\nconst PreviewDot: React.FC<{ enemy: Enemy }> = ({ enemy }) => {\r\n  const imgID = (enemy.PatternID >> 8) % 4096;\r\n  const previewSprite = enemy.Dots?.[0].Entries[0].Sprites[0];\r\n  return (\r\n    <div>\r\n      {previewSprite && (\r\n        <div\r\n          style={{\r\n            display: 'inline-block',\r\n            width: previewSprite.Width,\r\n            height: previewSprite.Height,\r\n            backgroundImage: `url(\"${ENEMY_DOT_URL}/${imgID}/sprite.png\")`,\r\n            backgroundPositionX: -previewSprite.X,\r\n            backgroundPositionY: -previewSprite.Y,\r\n            zoom: Math.min(40 / previewSprite.Height, 40 / previewSprite.Width),\r\n            verticalAlign: 'middle',\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewDot;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { Quest } from 'interfaces';\r\nimport { MAP_IMAGE_URL, STATIC_URL } from 'consts';\r\nimport { Stage, Layer, Image, Circle, Arrow } from 'react-konva';\r\nimport useImage from 'use-image';\r\nimport styles from './Quest.module.less';\r\nimport { InputNumber, Select } from 'antd';\r\n\r\nconst MapTable: React.FC<{ quest: Quest }> = ({ quest }) => {\r\n  const [mapImg] = useImage(\r\n    quest.Map.Image\r\n      ? 'http://assets.millennium-war.net' + quest.Map.Image\r\n      : `${MAP_IMAGE_URL}/${quest.Map.MapName}.png`,\r\n  );\r\n  const [heartImg] = useImage(STATIC_URL + '/heart.png');\r\n  const [nearImg] = useImage(STATIC_URL + '/near.png');\r\n  const [farImg] = useImage(STATIC_URL + '/far.png');\r\n  const [zoom, setZoom] = useState(1);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [circle, setCircle] = useState<{\r\n    x?: number;\r\n    y?: number;\r\n    range?: number;\r\n  }>({});\r\n  const [routeNos, setRouteNos] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    const resize = () => {\r\n      if (containerRef.current) {\r\n        setZoom(containerRef.current.offsetWidth / 960);\r\n      }\r\n    };\r\n    window.onresize = resize;\r\n    resize();\r\n    return () => {\r\n      window.onresize = null;\r\n    };\r\n  }, []);\r\n\r\n  // const routeNosAppend = [...routeNos];\r\n  // for (let i = 0; i < routeNosAppend.length; i++) {\r\n  //   const routes = quest.Map.Routes[routeNosAppend[i]];\r\n  //   for (const route of routes) {\r\n  //     if (route.RouteID !== 0 && !routeNosAppend.includes(route.RouteID)) {\r\n  //       routeNosAppend.push(route.RouteID);\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: 0,\r\n          paddingBottom: '66.67%',\r\n          overflow: 'hidden',\r\n        }}\r\n        ref={containerRef}\r\n      >\r\n        <Stage width={960} height={640} scaleX={zoom} scaleY={zoom}>\r\n          <Layer>\r\n            <Image image={mapImg} />\r\n            {mapImg && heartImg && nearImg && farImg && (\r\n              <>\r\n                <Image image={mapImg} />\r\n                {quest.Map.Locations[quest.LocationNo].map(\r\n                  (location, index) => {\r\n                    const img =\r\n                      location.ObjectID === 0\r\n                        ? heartImg\r\n                        : location.ObjectID < 300\r\n                        ? nearImg\r\n                        : farImg;\r\n                    if (location.ObjectID === 0) {\r\n                      return (\r\n                        <Image\r\n                          image={img}\r\n                          key={index}\r\n                          x={location.X - img.width / 2}\r\n                          y={location.Y - img.height / 2}\r\n                        />\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Image\r\n                        onClick={() => {\r\n                          setCircle((c) => ({\r\n                            x: location.X,\r\n                            y: location.Y,\r\n                            range: c.range || 250,\r\n                          }));\r\n                        }}\r\n                        onTap={() => {\r\n                          setCircle((c) => ({\r\n                            x: location.X,\r\n                            y: location.Y,\r\n                            range: c.range || 250,\r\n                          }));\r\n                        }}\r\n                        onMouseEnter={() => {\r\n                          document.body.style.cursor = 'pointer';\r\n                        }}\r\n                        onMouseLeave={() => {\r\n                          document.body.style.cursor = 'default';\r\n                        }}\r\n                        image={img}\r\n                        key={index}\r\n                        x={location.X - img.width / 2}\r\n                        y={location.Y - img.height / 3}\r\n                      />\r\n                    );\r\n                  },\r\n                )}\r\n                {circle.range !== undefined &&\r\n                  circle.x !== undefined &&\r\n                  circle.y !== undefined && (\r\n                    <Circle\r\n                      radius={circle.range * 0.75}\r\n                      x={circle.x}\r\n                      y={circle.y}\r\n                      fill=\"rgba(0, 255, 0, 0.3)\"\r\n                      stroke=\"rgba(0, 255, 0, 0.5)\"\r\n                      onClick={() => setCircle({})}\r\n                      onTap={() => setCircle({})}\r\n                    />\r\n                  )}\r\n                {quest.Map.Routes.map((routes, index) => {\r\n                  if (!routeNos.includes(index)) {\r\n                    return null;\r\n                  }\r\n                  return (\r\n                    <React.Fragment key={index}>\r\n                      {routes.slice(1).map((route, i) => {\r\n                        return (\r\n                          <Arrow\r\n                            points={[\r\n                              routes[i].X,\r\n                              routes[i].Y,\r\n                              route.X,\r\n                              route.Y,\r\n                            ]}\r\n                            key={i}\r\n                            stroke=\"rgba(255, 255, 255, 0.7)\"\r\n                            fill=\"red\"\r\n                            strokeWidth={8}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Layer>\r\n        </Stage>\r\n      </div>\r\n      <table className={styles.table}>\r\n        <tbody>\r\n          <tr>\r\n            <th>射程圈</th>\r\n            <td>\r\n              <InputNumber\r\n                min={0}\r\n                style={{ width: '100%' }}\r\n                value={circle.range}\r\n                onChange={(value) =>\r\n                  value &&\r\n                  value >= 0 &&\r\n                  setCircle((c) => ({ ...c, range: value && value }))\r\n                }\r\n                placeholder=\"点一下上图里的配置位\"\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th>路径</th>\r\n            <td>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: '100%' }}\r\n                value={routeNos}\r\n                onChange={(value: number[]) => setRouteNos(value)}\r\n                placeholder=\"选择路径\"\r\n              >\r\n                {quest.Map.Routes.map(\r\n                  (route, index) =>\r\n                    route && (\r\n                      <Select.Option key={index} value={index}>\r\n                        {index}\r\n                      </Select.Option>\r\n                    ),\r\n                )}\r\n              </Select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapTable;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { QuestTermConfig } from 'interfaces';\r\nimport styles from './Quest.module.less';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Input, message, Spin } from 'antd';\r\nimport classNames from 'classnames';\r\n\r\nconst QuestConfigTableRows: React.FC<{ config: QuestTermConfig }> = ({\r\n  config,\r\n}) => {\r\n  const [value, setValue] = useState(config.Comment || '');\r\n\r\n  const [setQuestConfigMeta, { loading, data }] = useMutation<{\r\n    QuestConfigMeta?: { TypeID: number; Comment: string };\r\n  }>(\r\n    gql`\r\n      mutation($TypeID: Int!, $Comment: String) {\r\n        QuestConfigMeta(TypeID: $TypeID, Comment: $Comment) {\r\n          TypeID\r\n          Comment\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      onCompleted: d => {\r\n        setValue(d?.QuestConfigMeta?.Comment || '');\r\n      },\r\n    },\r\n  );\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const ref = useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (editing && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const handleSave = async () => {\r\n    await setQuestConfigMeta({\r\n      variables: { TypeID: config.Type_Influence, Comment: value },\r\n    });\r\n    message.success('修改成功');\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <tbody className={styles.configRowGroup}>\r\n      <tr className={styles.cover}>\r\n        <td\r\n          colSpan={8}\r\n          className={classNames({\r\n            [styles.blank]: !(data\r\n              ? data.QuestConfigMeta?.Comment\r\n              : config.Comment),\r\n          })}\r\n        >\r\n          {editing ? (\r\n            <Spin spinning={loading}>\r\n              <Input\r\n                size=\"small\"\r\n                ref={ref}\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n                onBlur={handleSave}\r\n                onPressEnter={handleSave}\r\n              />\r\n            </Spin>\r\n          ) : (\r\n            <div\r\n              className={classNames(styles.fakeInput, styles.small)}\r\n              onClick={() => setEditing(true)}\r\n            >\r\n              {data ? data.QuestConfigMeta?.Comment : config.Comment}\r\n            </div>\r\n          )}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>{config.Type_Influence}</td>\r\n        <td>{config.Data_Param1}</td>\r\n        <td>{config.Data_Param2}</td>\r\n        <td>{config.Data_Param3}</td>\r\n        <td>{config.Data_Param4}</td>\r\n      </tr>\r\n\r\n      {!!config.Data_Expression && (\r\n        <tr style={{ borderBottom: '2px solid #e8e8e8' }}>\r\n          <td colSpan={5}>{config.Data_Expression}</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst QuestTermTable: React.FC<{ terms: QuestTermConfig[] }> = ({ terms }) => {\r\n  return (\r\n    <table\r\n      className={styles.table}\r\n      style={{\r\n        margin: -1,\r\n        width: 'calc(100% + 2px)',\r\n        tableLayout: 'fixed',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>类型</th>\r\n          <th>p1</th>\r\n          <th>p2</th>\r\n          <th>p3</th>\r\n          <th>p4</th>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={5}>cmd</th>\r\n        </tr>\r\n      </thead>\r\n      {terms.map((term, index) => (\r\n        <QuestConfigTableRows key={index} config={term} />\r\n      ))}\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default QuestTermTable;\r\n","import React, { useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Layout, Row, Col, Tag, Icon, Button, Switch } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport useRouter from 'use-react-router';\r\nimport { ICO_URL } from 'consts';\r\nimport EnemyTable from './EnemyTable';\r\nimport styles from './Quest.module.less';\r\nimport Loading from 'Components/Loading';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { renderDescription } from 'utils';\r\nimport { MapEntry, Enemy } from 'interfaces';\r\nimport { DotFragment, EnemyFragment } from 'fragments';\r\nimport PreviewDot from './PreviewDot';\r\nimport MapTable from './MapTable';\r\nimport QuestTermTable from './QuestTermTable';\r\nimport { Quest as QuestType } from 'interfaces';\r\nimport TalkRow from 'Components/TalkRow';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Quest: React.FC = () => {\r\n  const { match } = useRouter<{ QuestID: string }>();\r\n  const QuestID = Number.parseInt(match.params.QuestID, 10);\r\n  const [showTerms, setShowTerms] = useState(false);\r\n  const [showHardTerms, setShowHardTerms] = useState(false);\r\n  const [showMissionTalks, setShowMissionTalks] = useState(false);\r\n\r\n  const { data, loading } = useQuery<{\r\n    Quest: QuestType;\r\n    QuestEventTexts: Array<{\r\n      Message: string;\r\n      Name: string;\r\n      FaceID: number;\r\n    }>;\r\n  }>(\r\n    gql`\r\n      fragment termConfig on QuestTermConfig {\r\n        Type_Influence\r\n        Data_Param1\r\n        Data_Param2\r\n        Data_Param3\r\n        Data_Param4\r\n        Data_Expression\r\n        Comment\r\n      }\r\n      query ($id: Int!) {\r\n        Quest(QuestID: $id) {\r\n          EventArcs {\r\n            _TalkerName\r\n            _TalkText\r\n          }\r\n          Name\r\n          HardInfomation\r\n          Message\r\n          Charisma\r\n          EntryNo\r\n          LocationNo\r\n          Level\r\n          ActionPoint\r\n          Treasure1\r\n          Treasure2\r\n          Treasure3\r\n          Treasure4\r\n          Treasure5\r\n          RankExp\r\n          Gold\r\n          Capacity\r\n          QuestTerms\r\n          _HardCondition\r\n          _HardLevel\r\n          QuestTermConfigs {\r\n            ...termConfig\r\n          }\r\n          QuestHardTermConfigs {\r\n            ...termConfig\r\n          }\r\n          Mission {\r\n            MissionID\r\n            BattleTalkEvents {\r\n              Message\r\n              Name\r\n              FaceID\r\n              RecordIndex\r\n            }\r\n          }\r\n          MapNo\r\n          Map {\r\n            MapName\r\n            Image\r\n            Entries {\r\n              EnemyID\r\n              Wait\r\n              RouteNo\r\n              Loop\r\n              Level\r\n              PrizeEnemySpawnPercent\r\n              PrizeCardID\r\n              PrizeEnemyDropPercent\r\n              RouteOffset\r\n              IsAppear\r\n              FreeCommand\r\n              EntryCommand\r\n              DeadCommand\r\n            }\r\n            Routes {\r\n              X\r\n              Y\r\n              RouteID\r\n              JumpPoint\r\n              WarpDelay\r\n              WaitTime\r\n              OnEvent\r\n            }\r\n            Locations {\r\n              ObjectID\r\n              X\r\n              Y\r\n              _Command\r\n            }\r\n            Enemies {\r\n              ...enemy\r\n            }\r\n          }\r\n        }\r\n        QuestEventTexts {\r\n          Message\r\n          Name\r\n          FaceID\r\n        }\r\n      }\r\n      ${DotFragment}\r\n      ${EnemyFragment}\r\n    `,\r\n    { variables: { id: QuestID } },\r\n  );\r\n\r\n  const dropper: Array<Array<Enemy & MapEntry>> = [[], [], [], [], []];\r\n  let enemiesCount = 0;\r\n  if (data) {\r\n    const enemies = data.Quest.Map.Enemies;\r\n    const entries = data.Quest.Map.Entries[data.Quest.EntryNo];\r\n    for (const entry of entries) {\r\n      if (entry.EnemyID >= 0 && entry.EnemyID < 1000) {\r\n        enemiesCount += entry.Loop;\r\n        if (entry.PrizeCardID !== 0) {\r\n          dropper[entry.PrizeCardID - 1].push({\r\n            ...enemies[entry.EnemyID - 1],\r\n            ...entry,\r\n            Loop: enemiesCount,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const haveDrop = dropper\r\n    .map((drop) => drop.length !== 0)\r\n    .reduce((prev, curr) => prev || curr);\r\n\r\n  return (\r\n    <Content className={styles.questContainer}>\r\n      {loading && <Loading />}\r\n      {data && data.Quest && (\r\n        <div>\r\n          <h1 className={styles.questTitle}>\r\n            <Link to={`/quest/${QuestID - 1}`}>\r\n              <Icon type=\"left\" />\r\n            </Link>\r\n            {data.Quest.Name}\r\n            <Link to={`/quest/${QuestID + 1}`}>\r\n              <Icon type=\"right\" />\r\n            </Link>\r\n          </h1>\r\n          <div>\r\n            {data.Quest.Charisma ? (\r\n              <Tag color=\"green\">\r\n                魅力：\r\n                {data.Quest.Charisma}\r\n              </Tag>\r\n            ) : null}\r\n            {data.Quest.ActionPoint ? (\r\n              <Tag color=\"red\">\r\n                体力：\r\n                {data.Quest.ActionPoint}\r\n              </Tag>\r\n            ) : null}\r\n          </div>\r\n          <Row gutter={8} className={styles.questInfo}>\r\n            <Col md={12} sm={24}>\r\n              <MapTable quest={data.Quest} />\r\n            </Col>\r\n            <Col md={12} sm={24}>\r\n              <table className={styles.table} style={{ margin: 0 }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td colSpan={4}>\r\n                      <div\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: renderDescription(data.Quest.Message),\r\n                        }}\r\n                        style={{\r\n                          textAlign: 'left',\r\n                          maxWidth: '20em',\r\n                          margin: 'auto',\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>经验</th>\r\n                    <td>{data.Quest.RankExp}</td>\r\n                    <th>钱</th>\r\n                    <td>{data.Quest.Gold}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>心数</th>\r\n                    <td>{data.Quest.Capacity}</td>\r\n                    <th>怪数</th>\r\n                    <td>{enemiesCount}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>补正</th>\r\n                    <td>{data.Quest.Level}</td>\r\n                    <th>设置</th>\r\n                    <td>\r\n                      {data.Quest.QuestTerms !== 0 && (\r\n                        <Button\r\n                          type=\"primary\"\r\n                          size=\"small\"\r\n                          onClick={() => setShowTerms(!showTerms)}\r\n                          icon={showTerms ? 'up' : 'down'}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  {showTerms && (\r\n                    <tr>\r\n                      <td colSpan={4} style={{ padding: 0 }}>\r\n                        <QuestTermTable terms={data.Quest.QuestTermConfigs} />\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {data.Quest._HardCondition !== 0 && (\r\n                    <>\r\n                      <tr>\r\n                        <td colSpan={4}>\r\n                          <div\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: renderDescription(\r\n                                // TODO: delete ||\r\n                                data.Quest.HardInfomation || '',\r\n                              ),\r\n                            }}\r\n                            style={{\r\n                              textAlign: 'left',\r\n                              maxWidth: '20em',\r\n                              margin: 'auto',\r\n                            }}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>4☆补正</th>\r\n                        <td>{data.Quest._HardLevel}</td>\r\n                        <th>设置</th>\r\n                        <td>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={() => setShowHardTerms(!showHardTerms)}\r\n                            icon={showHardTerms ? 'up' : 'down'}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  )}\r\n                  {showHardTerms && (\r\n                    <tr>\r\n                      <td colSpan={4} style={{ padding: 0 }}>\r\n                        <QuestTermTable\r\n                          terms={data.Quest.QuestHardTermConfigs}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                  {haveDrop && (\r\n                    <tr>\r\n                      <td colSpan={4}>\r\n                        <table>\r\n                          <tbody>\r\n                            <tr>\r\n                              {dropper.map((_, index) => {\r\n                                const treasure: number = (data.Quest as any)[\r\n                                  `Treasure${index + 1}`\r\n                                ];\r\n                                return (\r\n                                  <td style={{ width: '20%' }} key={index}>\r\n                                    {treasure ? (\r\n                                      <div>\r\n                                        <img\r\n                                          alt={treasure.toString()}\r\n                                          style={{ width: '100%' }}\r\n                                          src={`${ICO_URL}/0/${\r\n                                            (treasure >= 1000 && treasure < 2000\r\n                                              ? '_'\r\n                                              : '') + treasure\r\n                                          }.png`}\r\n                                        />\r\n                                        {dropper[4].length === 0 &&\r\n                                          index === 4 && (\r\n                                            <Tag\r\n                                              color=\"red\"\r\n                                              style={{ margin: 0 }}\r\n                                            >\r\n                                              COM\r\n                                            </Tag>\r\n                                          )}\r\n                                      </div>\r\n                                    ) : null}\r\n                                  </td>\r\n                                );\r\n                              })}\r\n                            </tr>\r\n                            <tr>\r\n                              {dropper.map((drops, index) => (\r\n                                <td key={index}>\r\n                                  {drops.map((drop, i) => {\r\n                                    return (\r\n                                      <div key={i}>\r\n                                        <PreviewDot enemy={drop} />#{drop.Loop}\r\n                                      </div>\r\n                                    );\r\n                                  })}\r\n                                </td>\r\n                              ))}\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </Col>\r\n          </Row>\r\n          {data && <EnemyTable data={data} />}\r\n          {data && data.Quest.EventArcs && data.Quest.EventArcs.length !== 0 && (\r\n            <div>\r\n              <h2>过场对话</h2>\r\n              <table className={styles.table}>\r\n                <tbody>\r\n                  {data.Quest.EventArcs.map((arc, index) => (\r\n                    <tr key={index}>\r\n                      <th>{arc._TalkerName}</th>\r\n                      <td>\r\n                        <div\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: renderDescription(arc._TalkText),\r\n                          }}\r\n                          style={{\r\n                            margin: 'auto',\r\n                            maxWidth: '30em',\r\n                            textAlign: 'left',\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n          {data && data.Quest.Mission.BattleTalkEvents?.length !== 0 && (\r\n            <div>\r\n              <h2>\r\n                Mission对话&nbsp;\r\n                <Switch\r\n                  checkedChildren=\"显示\"\r\n                  unCheckedChildren=\"折叠\"\r\n                  checked={showMissionTalks}\r\n                  onChange={(value) => setShowMissionTalks(value)}\r\n                />\r\n              </h2>\r\n              {showMissionTalks && (\r\n                <table className={styles.table}>\r\n                  <colgroup style={{ width: 100 }} />\r\n                  <tbody>\r\n                    {data.Quest.Mission.BattleTalkEvents.map((talk, index) => (\r\n                      <TalkRow\r\n                        key={index}\r\n                        talk={talk}\r\n                        MissionID={data.Quest.Mission.MissionID}\r\n                        isTabletOrMobile={false}\r\n                      />\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Quest;\r\n","import React from 'react';\r\nimport { Layout, Collapse, Drawer, Menu } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport _ from 'lodash';\r\nimport { MISSION_TYPE } from './types';\r\nimport MissionShutter from './MissionShutter';\r\nimport useRouter from 'use-react-router';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Quest from '../Quest';\r\nimport Loading from 'Components/Loading';\r\nimport styles from './QuestList.module.less';\r\nimport { useState } from 'react';\r\n\r\nconst { Content, Sider } = Layout;\r\nconst Panel = Collapse.Panel;\r\n\r\nconst QuestList: React.FC = () => {\r\n  const { match, history } = useRouter<{ QuestID: string }>();\r\n  const { QuestID } = match.params;\r\n\r\n  const [currentMissionType, setCurrentMissionType] = useState('Emergency');\r\n\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' });\r\n\r\n  const { loading, data } = useQuery<{\r\n    Missions: Array<{\r\n      Name: string;\r\n      Type: string;\r\n      MissionID: number;\r\n    }>;\r\n  }>(\r\n    gql`\r\n      query {\r\n        Missions {\r\n          Name\r\n          Type\r\n          MissionID\r\n        }\r\n      }\r\n    `,\r\n  );\r\n\r\n  const missions = data ? Object.entries(_.groupBy(data.Missions, 'Type')) : [];\r\n\r\n  return (\r\n    <Layout style={{ position: 'relative', overflow: 'hidden' }}>\r\n      <Sider theme=\"light\" className={styles.sider}>\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <Menu\r\n            theme=\"light\"\r\n            selectedKeys={[currentMissionType]}\r\n            onSelect={p => setCurrentMissionType(p.key)}\r\n            style={{ border: 'none' }}\r\n          >\r\n            {missions.map(([key]) => (\r\n              <Menu.Item key={key}>{MISSION_TYPE[key]}</Menu.Item>\r\n            ))}\r\n          </Menu>\r\n        )}\r\n      </Sider>\r\n      <Content style={{ position: 'relative' }}>\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Content className={styles.missionListContent}>\r\n            {!loading ? (\r\n              <Collapse bordered={false}>\r\n                {missions\r\n                  .find(m => m[0] === currentMissionType)![1]\r\n                  .map(mission => {\r\n                    return (\r\n                      <Panel\r\n                        key={mission.MissionID}\r\n                        header={\r\n                          <span>\r\n                            {mission.MissionID}\r\n                            &nbsp;\r\n                            <strong>{mission.Name}</strong>\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <MissionShutter\r\n                          mission={mission}\r\n                          isTabletOrMobile={isTabletOrMobile}\r\n                        />\r\n                      </Panel>\r\n                    );\r\n                  })}\r\n              </Collapse>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Content>\r\n        </div>\r\n      </Content>\r\n      <Drawer\r\n        width={isTabletOrMobile ? '100%' : '80%'}\r\n        visible={!!QuestID}\r\n        destroyOnClose\r\n        onClose={() => history.push('/quest')}\r\n        getContainer={false}\r\n        style={{ position: 'absolute' }}\r\n      >\r\n        {QuestID && <Quest />}\r\n      </Drawer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default QuestList;\r\n","import React, { useState } from 'react';\r\nimport { Layout, Spin, Pagination, Input } from 'antd';\r\n\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { ClassData } from 'interfaces';\r\nimport ClassTable from 'Components/ClassTable';\r\nimport { MissileFragment } from 'fragments';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ClassList: React.FC = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const handleSetSearch = (value: string) => {\r\n    setSearch(value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const classFilter = (unitClass: any) => {\r\n    return JSON.stringify(unitClass).includes(search);\r\n  };\r\n\r\n  const { data, loading, refetch } = useQuery<{ Classes: ClassData[] }>(gql`\r\n    query {\r\n      Classes {\r\n        AttackAttribute\r\n        Missile {\r\n          ...missile\r\n        }\r\n        ClassID\r\n        Name\r\n        Explanation\r\n        JobChange\r\n        JobChangeMaterial1\r\n        JobChangeMaterial2\r\n        JobChangeMaterial3\r\n        Data_ExtraAwakeOrb1\r\n        Data_ExtraAwakeOrb2\r\n        AwakeType1\r\n        AwakeType2\r\n        AttackWait\r\n        NickNames\r\n        ClassAbilityConfigs {\r\n          _InvokeType\r\n          _TargetType\r\n          _InfluenceType\r\n          _Param1\r\n          _Param2\r\n          _Param3\r\n          _Param4\r\n          _Command\r\n          _ActivateCommand\r\n          Comment\r\n        }\r\n        ClassAbilityPower1\r\n        Cards {\r\n          CardID\r\n          Name\r\n          Rare\r\n        }\r\n      }\r\n    }\r\n    ${MissileFragment}\r\n  `);\r\n\r\n  return (\r\n    <Content className=\"container\">\r\n      <Spin spinning={loading}>\r\n        <Input\r\n          placeholder=\"搜索职业\"\r\n          value={search}\r\n          onChange={event => {\r\n            handleSetSearch(event.target.value);\r\n          }}\r\n        />\r\n        {data &&\r\n          data.Classes &&\r\n          data.Classes.filter(classFilter)\r\n            .sort((c1, c2) => c1.ClassID - c2.ClassID)\r\n            .slice(50 * (currentPage - 1), 50 * currentPage)\r\n            .map(unitClass => {\r\n              return (\r\n                <ClassTable\r\n                  key={unitClass.ClassID}\r\n                  classData={unitClass}\r\n                  onCompleted={refetch}\r\n                />\r\n              );\r\n            })}\r\n        {data && data.Classes && (\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            defaultPageSize={50}\r\n            current={currentPage}\r\n            onChange={page => setCurrentPage(page)}\r\n            total={data.Classes.filter(classFilter).length}\r\n          />\r\n        )}\r\n      </Spin>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ClassList;\r\n","import React, { useState } from 'react';\r\nimport { Layout, Pagination, Input } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SkillData } from 'interfaces';\r\nimport SkillTable from 'Components/SkillTable';\r\nimport Loading from 'Components/Loading';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Data {\r\n  Skills: SkillData[];\r\n}\r\n\r\nconst SkillList: React.FC = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const handleSetSearch = (search: string) => {\r\n    setSearch(search);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const skillFilter = (skill: any) => {\r\n    return !search || JSON.stringify(skill).includes(search);\r\n  };\r\n\r\n  const { data, loading } = useQuery<Data>(gql`\r\n    query {\r\n      Skills {\r\n        SkillID\r\n        SkillName\r\n        WaitTime\r\n        ContTimeMax\r\n        PowerMax\r\n        LevelMax\r\n        Text\r\n        Configs {\r\n          Type_Collision\r\n          Type_CollisionState\r\n          Type_ChangeFunction\r\n          Data_Target\r\n          Data_InfluenceType\r\n          Data_MulValue\r\n          Data_MulValue2\r\n          Data_MulValue3\r\n          Data_AddValue\r\n          _HoldRatioUpperLimit\r\n          _Expression\r\n          _ExpressionActivate\r\n          Comment\r\n        }\r\n        Cards {\r\n          CardID\r\n          Name\r\n          Rare\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Content className=\"container\">\r\n      <Loading spinning={loading}>\r\n        <Input\r\n          placeholder=\"搜索技能\"\r\n          value={search}\r\n          onChange={event => {\r\n            handleSetSearch(event.target.value);\r\n          }}\r\n        />\r\n        {data &&\r\n          data.Skills &&\r\n          data.Skills.filter(skillFilter)\r\n            .slice(50 * (currentPage - 1), 50 * currentPage)\r\n            .map((skill, index) => <SkillTable skills={[skill]} key={index} />)}\r\n        {data && data.Skills && (\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            defaultPageSize={50}\r\n            current={currentPage}\r\n            onChange={page => setCurrentPage(page)}\r\n            total={data.Skills.filter(skillFilter).length}\r\n          />\r\n        )}\r\n      </Loading>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default SkillList;\r\n","import React, { useState } from 'react';\r\nimport { Spin, Layout, Pagination, Input } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { AbilityData } from 'interfaces';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport AbilityTable from 'Components/AbilityTable';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst AbilityList: React.FC = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handleSetSearch = (search: string) => {\r\n    setSearch(search);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const abilityFilter = (ability: AbilityData) => {\r\n    return !search || (search && JSON.stringify(ability).includes(search));\r\n  };\r\n\r\n  const { data, loading } = useQuery<{ Abilities: AbilityData[] }>(gql`\r\n    query {\r\n      Abilities {\r\n        AbilityID\r\n        Text\r\n        AbilityName\r\n        Configs {\r\n          _InvokeType\r\n          _TargetType\r\n          _InfluenceType\r\n          _Param1\r\n          _Param2\r\n          _Param3\r\n          _Param4\r\n          _Command\r\n          _ActivateCommand\r\n          Comment\r\n        }\r\n        Cards {\r\n          CardID\r\n          Name\r\n          Rare\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Content className=\"container\">\r\n      <Spin spinning={loading}>\r\n        <Input\r\n          placeholder=\"搜索被动\"\r\n          value={search}\r\n          onChange={event => {\r\n            handleSetSearch(event.target.value);\r\n          }}\r\n        />\r\n        {data &&\r\n          data.Abilities &&\r\n          data.Abilities.filter(abilityFilter)\r\n            .slice(50 * (currentPage - 1), 50 * currentPage)\r\n            .map((ability, index) => {\r\n              return <AbilityTable ability={ability} key={index} />;\r\n            })}\r\n        {data && data.Abilities && (\r\n          <Pagination\r\n            defaultCurrent={1}\r\n            defaultPageSize={50}\r\n            current={currentPage}\r\n            onChange={page => setCurrentPage(page)}\r\n            total={data.Abilities.filter(abilityFilter).length}\r\n          />\r\n        )}\r\n      </Spin>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default AbilityList;\r\n","import * as React from 'react';\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Col,\r\n  Spin,\r\n  Icon,\r\n  Popconfirm,\r\n  Drawer,\r\n  Tag,\r\n  Modal,\r\n} from 'antd';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport classNames from 'classnames';\r\nimport styles from './index.module.less';\r\nimport { EMOJI_URL } from '../../../consts';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Data {\r\n  emojis: Array<{\r\n    _id: string;\r\n    emoji: string;\r\n    name: string;\r\n    group: number[];\r\n  }>;\r\n}\r\n\r\ninterface EmojiListStates {\r\n  drawerVisible: boolean;\r\n  currentEmoji: {\r\n    _id: string;\r\n    name: string[];\r\n    emoji: string[];\r\n    group: number[];\r\n  };\r\n  modalVisible: boolean;\r\n  currentImage: string;\r\n}\r\nexport default class EmojiList extends React.Component<any, EmojiListStates> {\r\n  public state: EmojiListStates = {\r\n    drawerVisible: false,\r\n    currentEmoji: {\r\n      _id: '',\r\n      name: [],\r\n      emoji: [],\r\n      group: [],\r\n    },\r\n    modalVisible: false,\r\n    currentImage: '',\r\n  };\r\n\r\n  public isImg = (img: string) => {\r\n    const [, ext] = img.split('.');\r\n    if (['jpg', 'jpeg', 'png', 'gif', 'bmp'].indexOf(ext) !== -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <Query<Data>\r\n        query={gql`\r\n          query {\r\n            emojis {\r\n              _id\r\n              emoji\r\n              name\r\n              group\r\n            }\r\n          }\r\n        `}\r\n      >\r\n        {({ loading, error, data, refetch }) => (\r\n          <Content className=\"container\">\r\n            <Spin spinning={loading}>\r\n              <Row className=\"sorter-block\">\r\n                <Col span={2}>#</Col>\r\n                <Col span={7}>名称</Col>\r\n                <Col span={9}>存在的群</Col>\r\n                <Col span={6}>数量</Col>\r\n              </Row>\r\n            </Spin>\r\n            {data &&\r\n              data.emojis &&\r\n              data.emojis.map((emoji: any, index: number) => (\r\n                <Row\r\n                  className=\"list-card\"\r\n                  key={emoji._id}\r\n                  onClick={() => {\r\n                    this.setState({ drawerVisible: true, currentEmoji: emoji });\r\n                  }}\r\n                >\r\n                  <Col span={2}>{index + 1}</Col>\r\n                  <Col span={7} className=\"important\">\r\n                    {emoji.name.join(', ')}\r\n                  </Col>\r\n                  <Col span={9}>{emoji.group.join(', ')}</Col>\r\n                  <Col span={6}>{emoji.emoji && emoji.emoji.length}</Col>\r\n                  <div\r\n                    className={classNames(\r\n                      'list-card-addon',\r\n                      styles.deleteIconContainer,\r\n                    )}\r\n                    onClick={e => {\r\n                      e.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <Mutation\r\n                      mutation={gql`\r\n                        mutation removeEmoji($ID: String!) {\r\n                          removeEmoji(ID: $ID)\r\n                        }\r\n                      `}\r\n                    >\r\n                      {(removeEmoji: any, { data }: any) => (\r\n                        <Popconfirm\r\n                          title=\"是否要删除这个emoji？\"\r\n                          onConfirm={() => {\r\n                            removeEmoji({\r\n                              variables: {\r\n                                ID: emoji._id,\r\n                              },\r\n                            }).then(() => {\r\n                              refetch();\r\n                            });\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            className={styles.deleteIcon}\r\n                            type=\"delete\"\r\n                            theme=\"outlined\"\r\n                          />\r\n                        </Popconfirm>\r\n                      )}\r\n                    </Mutation>\r\n                  </div>\r\n                </Row>\r\n              ))}\r\n            <Drawer\r\n              width={'70%'}\r\n              className={styles.emojiDrawer}\r\n              title=\"emojij详情\"\r\n              onClose={() => this.setState({ drawerVisible: false })}\r\n              visible={this.state.drawerVisible}\r\n            >\r\n              <div style={{ marginBottom: 10 }}>\r\n                <span className=\"label\">名称:</span>\r\n                {this.state.currentEmoji.name.map(name => (\r\n                  <Tag key={name} color=\"blue\">\r\n                    {name}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n              <div style={{ marginBottom: 10 }}>\r\n                <span className=\"label\">分组:</span>\r\n                {this.state.currentEmoji.group.map(group => (\r\n                  <Tag key={group} color=\"blue\">\r\n                    {group}\r\n                  </Tag>\r\n                ))}\r\n              </div>\r\n              <div className={styles.imageContainer}>\r\n                {this.state.currentEmoji.emoji.map(\r\n                  (emoji: any, index: number) => {\r\n                    return (\r\n                      <div key={emoji} className={styles.imageBox}>\r\n                        <div className={styles.imageCover}>\r\n                          <div className={styles.imageActionContainer}>\r\n                            <Icon\r\n                              className={styles.imageAction}\r\n                              type=\"eye\"\r\n                              theme=\"outlined\"\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  modalVisible: true,\r\n                                  currentImage: emoji,\r\n                                });\r\n                              }}\r\n                            />\r\n                            <Mutation\r\n                              mutation={gql`\r\n                                mutation removeEmojiItem(\r\n                                  $ID: String!\r\n                                  $index: Int!\r\n                                ) {\r\n                                  removeEmojiItem(ID: $ID, index: $index)\r\n                                }\r\n                              `}\r\n                            >\r\n                              {(removeEmojiItem: any) => {\r\n                                return (\r\n                                  <Popconfirm\r\n                                    title=\"是否要删除这个emoji？\"\r\n                                    onConfirm={() => {\r\n                                      removeEmojiItem({\r\n                                        variables: {\r\n                                          ID: this.state.currentEmoji._id,\r\n                                          index,\r\n                                        },\r\n                                      }).then((data: any) => {\r\n                                        if (data && data.data.removeEmojiItem) {\r\n                                          refetch();\r\n                                          this.setState(({ currentEmoji }) => ({\r\n                                            currentEmoji: {\r\n                                              ...currentEmoji,\r\n                                              emoji: [\r\n                                                ...currentEmoji.emoji.slice(\r\n                                                  0,\r\n                                                  index,\r\n                                                ),\r\n                                                ...currentEmoji.emoji.slice(\r\n                                                  index + 1,\r\n                                                ),\r\n                                              ],\r\n                                            },\r\n                                          }));\r\n                                        }\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <Icon\r\n                                      className={styles.imageAction}\r\n                                      type=\"delete\"\r\n                                      theme=\"outlined\"\r\n                                    />\r\n                                  </Popconfirm>\r\n                                );\r\n                              }}\r\n                            </Mutation>\r\n                          </div>\r\n                        </div>\r\n                        {this.isImg(emoji) ? (\r\n                          <img alt={emoji} src={`${EMOJI_URL}/${emoji}`} />\r\n                        ) : (\r\n                          <span>{emoji}</span>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  },\r\n                )}\r\n              </div>\r\n            </Drawer>\r\n            <Modal\r\n              onCancel={() => this.setState({ modalVisible: false })}\r\n              visible={this.state.modalVisible}\r\n              footer={null}\r\n              style={{ textAlign: 'center' }}\r\n            >\r\n              {this.isImg(this.state.currentImage) ? (\r\n                <img\r\n                  alt={this.state.currentImage}\r\n                  src={`${EMOJI_URL}/${this.state.currentImage}`}\r\n                />\r\n              ) : (\r\n                <span>{this.state.currentImage}</span>\r\n              )}\r\n            </Modal>\r\n          </Content>\r\n        )}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Layout, Input, Form, Button, Icon } from 'antd';\r\nimport useForm from 'rc-form-hooks';\r\nimport UserContext from '../../../context/UserContext';\r\nimport styles from './Login.module.less';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Login: React.FC = () => {\r\n  const { getFieldDecorator, validateFields } = useForm<{ token: string }>();\r\n  const { login } = UserContext.useContainer();\r\n  const handleLogin = async () => {\r\n    const values = await validateFields();\r\n    login(values.token);\r\n  };\r\n  return (\r\n    <Content>\r\n      <Form className={styles.loginForm}>\r\n        <Form.Item>\r\n          {getFieldDecorator('token')(\r\n            <Input\r\n              type=\"password\"\r\n              prefix={\r\n                <Icon\r\n                  onClick={handleLogin}\r\n                  style={{ cursor: 'default' }}\r\n                  type=\"lock\"\r\n                />\r\n              }\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Button type=\"primary\" block>\r\n          登录\r\n        </Button>\r\n      </Form>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport MissileTable from 'Components/MissileTable';\r\nimport { Layout } from 'antd';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { MissileFragment } from 'fragments';\r\nimport Loading from 'Components/Loading';\r\nimport { Missile } from 'interfaces';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst MissileList: React.FC = () => {\r\n  const { data, loading } = useQuery<{ Missiles: Missile[] }>(gql`\r\n    query {\r\n      Missiles {\r\n        ...missile\r\n      }\r\n    }\r\n    ${MissileFragment}\r\n  `);\r\n  return (\r\n    <Content className=\"container\">\r\n      <Loading spinning={loading}>\r\n        {data &&\r\n          data.Missiles.map((missile, index) => (\r\n            <MissileTable missile={missile} key={index} />\r\n          ))}\r\n      </Loading>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default MissileList;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport {\r\n  withRouter,\r\n  Switch,\r\n  Route,\r\n  RouteComponentProps,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport Header from './Header';\r\n\r\nimport Home from './Routes/Home';\r\nimport UnitList from './Routes/UnitList';\r\nimport QuestList from './Routes/QuestList';\r\nimport ClassList from './Routes/ClassList';\r\nimport SkillList from './Routes/SkillList';\r\nimport AbilityList from './Routes/AbilityList';\r\nimport EmojiList from './Routes/EmojiList';\r\nimport Login from './Routes/Login';\r\nimport MissileList from './Routes/MissileList';\r\n\r\nconst Router: React.FC<RouteComponentProps> = () => {\r\n  const { isLoggedIn } = UserContext.useContainer();\r\n\r\n  return !isLoggedIn ? (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Login} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  ) : (\r\n    <Layout>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/unit/:CardID\" component={UnitList} />\r\n        <Route path=\"/quest/:QuestID\" component={QuestList} />\r\n        <Route path=\"/unit\" exact component={UnitList} />\r\n        <Route path=\"/quest\" exact component={QuestList} />\r\n        <Route path=\"/class\" exact component={ClassList} />\r\n        <Route path=\"/skill\" exact component={SkillList} />\r\n        <Route path=\"/ability\" exact component={AbilityList} />\r\n        <Route path=\"/missile\" exact component={MissileList} />\r\n        <Route path=\"/emoji\" exact component={EmojiList} />\r\n        <Route component={Home} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Router);\r\n","import { Layout } from 'antd';\r\nimport * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport './App.less';\r\nimport UserContext from './context/UserContext';\r\nimport MediaContext from './context/MediaContext';\r\nimport Router from './Components/Router';\r\nimport { API_URL } from './consts';\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst client = new ApolloClient({\r\n  uri: API_URL,\r\n});\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <HashRouter>\r\n        <ConfigProvider locale={zhCN}>\r\n          <ApolloProvider client={client}>\r\n            <UserContext.Provider>\r\n              <MediaContext.Provider>\r\n                <Layout className=\"App\" style={{ height: '100%' }}>\r\n                  <Router />\r\n                </Layout>\r\n              </MediaContext.Provider>\r\n            </UserContext.Provider>\r\n          </ApolloProvider>\r\n        </ConfigProvider>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href,\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.less';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unitRaritySider\":\"unitRaritySider--2gItA\",\"unitRarityMenu\":\"unitRarityMenu--8Qf5n\",\"unitListContent\":\"unitListContent--36QQ2\",\"sider\":\"sider--2tJQ0\",\"filterContainer\":\"filterContainer--2VKib\",\"sorterBlock\":\"sorterBlock--KBZMT\",\"shadow\":\"shadow--1W6Jm\",\"listContainer\":\"listContainer--1bWDn\",\"listCard\":\"listCard--1Bay0\",\"male\":\"male--3nLop\",\"female\":\"female--29QGQ\",\"disable\":\"disable--qpu_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1QcJH\",\"th\":\"th--3CrBB\",\"compact\":\"compact--3SGrW\",\"fakeInput\":\"fakeInput--3aD2y\",\"small\":\"small--1VTBK\",\"configRowGroup\":\"configRowGroup--d5o5P\",\"cover\":\"cover--13igz\",\"blank\":\"blank--2JweT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteIconContainer\":\"deleteIconContainer--Ka13J\",\"deleteIcon\":\"deleteIcon--396xM\",\"imageContainer\":\"imageContainer--chkYQ\",\"imageBox\":\"imageBox--10DU5\",\"imageCover\":\"imageCover--NtOwb\",\"imageActionContainer\":\"imageActionContainer--rumP3\",\"imageAction\":\"imageAction--2P1vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--1DsAt\",\"th\":\"th--3vyLs\",\"compact\":\"compact--2S6H2\",\"fakeInput\":\"fakeInput--jubeu\",\"small\":\"small--1dBT3\",\"configRowGroup\":\"configRowGroup--apZj4\",\"cover\":\"cover--9KBzK\",\"blank\":\"blank--2HgyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table--IF6EY\",\"th\":\"th--iDq9c\",\"compact\":\"compact--RLpAq\",\"fakeInput\":\"fakeInput--1xECD\",\"small\":\"small--37kJo\",\"configRowGroup\":\"configRowGroup--3kYfU\",\"cover\":\"cover--2NLeO\",\"blank\":\"blank--10o5W\"};"],"sourceRoot":""}